name: CI
on:
  - push
  - pull_request
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          #- '1.0'
          - '1'
          #- 'nightly'
        os:
          - ubuntu-latest
          #- macOS-latest
          #- windows-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@latest
      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install libnetcdf-dev gfortran make perl netcdf-bin libnetcdff-dev libopenmpi-dev openmpi-bin git python3-pip wget python3-setuptools python3-matplotlib
          python3 -m pip install --upgrade pip
      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install openmpi netcdf gcc make perl git python wget
          python3 -m pip install --upgrade pip
          python3 -m pip install matplotlib
      - run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install motuclient==1.8.6
          motuclient --version
          git config --global user.name Tester
          git config --global user.email te@st.er
      - uses: julia-actions/julia-runtest@latest
        continue-on-error: ${{ matrix.version == 'nightly' }}
        env:
          ROMS_USERNAME: ${{ secrets.ROMS_USERNAME }}
          ROMS_PASSWORD: ${{ secrets.ROMS_PASSWORD }}
          CMEMS_USERNAME: ${{ secrets.CMEMS_USERNAME }}
          CMEMS_PASSWORD: ${{ secrets.CMEMS_PASSWORD }}

      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - run: |
          sudo apt-get update
          sudo apt-get install python3-matplotlib
          git config --global user.name name
          git config --global user.email email
          git config --global github.user username
      - run: |
          julia --project=docs -e '
            using Pkg
            Pkg.develop(PackageSpec(path=pwd()))
            Pkg.instantiate()'
      - run: |
          julia --project=docs -e '
            using Documenter: doctest
            using ROMS
            doctest(ROMS)'
      - run: julia --project=docs docs/make.jl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
