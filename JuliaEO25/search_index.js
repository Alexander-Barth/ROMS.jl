var documenterSearchIndex = {"docs":
[{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":"EditURL = \"../../examples/03_run_roms.jl\"","category":"page"},{"location":"03_run_roms/#Run-ROMS","page":"Running ROMS","title":"Run ROMS","text":"","category":"section"},{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":"The code here is also available as a notebook 03_run_roms.ipynb.","category":"page"},{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":"Run ROMS with 4 CPUs splitting the domain in 2 by 2 tiles","category":"page"},{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":"using Dates\nusing ROMS","category":"page"},{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":"Now we are ready to run the model:","category":"page"},{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":"modeldir = expanduser(\"~/ROMS-implementation-test\")\nsimulationdir = joinpath(modeldir,\"Simulation1\");","category":"page"},{"location":"03_run_roms/#Run-ROMS-from-julia","page":"Running ROMS","title":"Run ROMS from julia","text":"","category":"section"},{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":"NtileI and NtileJ must match the values in the roms.in file.","category":"page"},{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":"NtileI = 1\nNtileJ = 1\nnp = NtileI*NtileJ\n\nuse_openmp = true\nlogfile = \"roms.out\"\n\ncd(simulationdir) do\n    withenv(\"OPAL_PREFIX\" => nothing) do\n        ROMS.run_model(modeldir,\"roms.in\"; use_openmp, np, stdout = logfile)\n    end\nend;","category":"page"},{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":"If you run into a problem, please first read the error message carefully to get some indicaton what is wrong.","category":"page"},{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":"The ROMS outputs are the files roms_his.nc and roms_avg.nc.","category":"page"},{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":"Note that the usual method to run ROMS is from the command line.","category":"page"},{"location":"03_run_roms/#Run-ROMS-in-serial","page":"Running ROMS","title":"Run ROMS in serial","text":"","category":"section"},{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":"For example the serial binary romsS (without MPI and OpenMP) can be run as:","category":"page"},{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":"./romsS < roms.in | tee roms.out","category":"page"},{"location":"03_run_roms/#Run-ROMS-in-parallel","page":"Running ROMS","title":"Run ROMS in parallel","text":"","category":"section"},{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":"Make sure to activate MPI or OpenMP and recompile ROMS if necessary With MPI:","category":"page"},{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":"mpirun -np 4 ./romsM  roms.in | tee roms.out","category":"page"},{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":"where 4 is the number of cores to use. To use 4 CPUs, you need to set NtileI to 2 and NtileJ to 2.","category":"page"},{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":"With OpenMP:","category":"page"},{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":"OMPNUMTHREADS=4 ./romsO < roms.out | tee roms.out","category":"page"},{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":"With the command tee the normal screen output will be place in the file roms.out but still be printed on the screen.","category":"page"},{"location":"03_run_roms/#Interpreting-ROMS-output","page":"Running ROMS","title":"Interpreting ROMS output","text":"","category":"section"},{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":"Check minimum and maximum value of the different parameters","category":"page"},{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":" NLM: GET_STATE - Read state initial conditions,             t = 57235 00:00:00\n                   (Grid 02, File: roms_nest_his.nc, Rec=0182, Index=1)\n                - free-surface\n                   (Min = -4.63564634E-01 Max = -3.63838434E-01)","category":"page"},{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":"The barotropic, baroclinic and Coriolis Courant number should be smaller than 1","category":"page"},{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":" Minimum barotropic Courant Number =  2.09670689E-02\n Maximum barotropic Courant Number =  5.56799674E-01\n Maximum Coriolis   Courant Number =  1.71574766E-03","category":"page"},{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":"Information\nenergy (kinetic, potential, total) and volume\nmaximum Courant number","category":"page"},{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":"   STEP   Day HH:MM:SS  KINETIC_ENRG   POTEN_ENRG    TOTAL_ENRG    NET_VOLUME  Grid\n          C => (i,j,k)       Cu            Cv            Cw         Max Speed\n\n 346200 57235 00:00:00  2.691184E-03  1.043099E+04  1.043099E+04  6.221264E+13  01\n          (079,055,30)  9.266512E-02  4.949213E-02  0.000000E+00  1.081862E+00","category":"page"},{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":"Plot some variables like sea surface height and sea surface temperature at the beginning and the end of the simulation. In Julia, force figure 1 and to 2 to have the same color-bar.","category":"page"},{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":"figure(); p1 = pcolor(randn(3,3)); colorbar()\nfigure(); p2 = pcolor(randn(3,3)); colorbar()\np2.set_clim(p1.get_clim())","category":"page"},{"location":"03_run_roms/","page":"Running ROMS","title":"Running ROMS","text":"If everything runs fine,\nis the model still stable with a longer time steps (DT) ?\nincrease the number of time steps (NTIMES)\npossibly adapt the frequency at which you save the model results (NHIS, NAVG,NRST)","category":"page"},{"location":"01_build_roms/","page":"Compilation","title":"Compilation","text":"EditURL = \"../../examples/01_build_roms.jl\"","category":"page"},{"location":"01_build_roms/#Compilation-of-ROMS","page":"Compilation","title":"Compilation of ROMS","text":"","category":"section"},{"location":"01_build_roms/","page":"Compilation","title":"Compilation","text":"The code here is also available as a notebook 01_build_roms.ipynb.","category":"page"},{"location":"01_build_roms/","page":"Compilation","title":"Compilation","text":"The Regional Ocean Modeling System (ROMS) is a free-surface, terrain-following, primitive equations ocean model widely used by the scientific community for a diverse range of applications.","category":"page"},{"location":"01_build_roms/#Getting-the-source-code","page":"Compilation","title":"Getting the source code","text":"","category":"section"},{"location":"01_build_roms/","page":"Compilation","title":"Compilation","text":"The source code of ROMS is distributed via GitHub. We use version 4.1 of the ROMS code. The code is downloaded to the directory ~/src/roms:","category":"page"},{"location":"01_build_roms/","page":"Compilation","title":"Compilation","text":"using ROMS\n\nromsdir = expanduser(\"~/src/roms\")\nif !isdir(romsdir)\n    mkpath(dirname(romsdir))\n    cd(dirname(romsdir)) do\n        run(`git clone https://github.com/myroms/roms`)\n        cd(\"roms\") do\n            run(`git checkout roms-4.1`)\n        end\n    end\nend","category":"page"},{"location":"01_build_roms/","page":"Compilation","title":"Compilation","text":"Process(`git checkout roms-4.1`, ProcessExited(0))","category":"page"},{"location":"01_build_roms/","page":"Compilation","title":"Compilation","text":"The previous julia commands, are essentially the same as the following shell commands:","category":"page"},{"location":"01_build_roms/","page":"Compilation","title":"Compilation","text":"mkdir ~/src/\ncd ~/src/\ngit clone https://github.com/myroms/roms\ncd roms\ngit checkout roms-4.1","category":"page"},{"location":"01_build_roms/","page":"Compilation","title":"Compilation","text":"The output of the last command will tell you that You are in 'detached HEAD' state. (this is not an error).","category":"page"},{"location":"01_build_roms/","page":"Compilation","title":"Compilation","text":"All files that are specific to a given implementation of ROMS will be saved in a different directory modeldir:","category":"page"},{"location":"01_build_roms/","page":"Compilation","title":"Compilation","text":"modeldir = expanduser(\"~/ROMS-implementation-test\")\nmkpath(modeldir);","category":"page"},{"location":"01_build_roms/#The-header-file","page":"Compilation","title":"The header file","text":"","category":"section"},{"location":"01_build_roms/","page":"Compilation","title":"Compilation","text":"Before we can compile ROMS we need to","category":"page"},{"location":"01_build_roms/","page":"Compilation","title":"Compilation","text":"activate diffent terms of the momentum equations\nspecify the schemes uses for advection, horizontal mixing, type equation of state, ...","category":"page"},{"location":"01_build_roms/","page":"Compilation","title":"Compilation","text":"The header file controls the compilation of the ROMS model by telling the compiler which part of the code needs to be compiled. If you modify this file, ROMS need to be recompiled.","category":"page"},{"location":"01_build_roms/","page":"Compilation","title":"Compilation","text":"This header file should be named yourdomain.h (e.g. liguriansea.h for the Ligurian Sea) and created in the directory ROMS-implementation-test.","category":"page"},{"location":"01_build_roms/","page":"Compilation","title":"Compilation","text":"Do not change the two first lines and the last line of the following cell. When you execute the cell, the header file with the specified content is created.","category":"page"},{"location":"01_build_roms/","page":"Compilation","title":"Compilation","text":"header_file = joinpath(modeldir,\"liguriansea.h\")\nwrite(header_file,\"\"\"\n#define UV_ADV                    /* turn ON advection terms */\n#define UV_COR                    /* turn ON Coriolis term */\n#define DJ_GRADPS                 /* Splines density  Jacobian (Shchepetkin, 2000) */\n#define NONLIN_EOS                /* define if using nonlinear equation of state */\n#define SALINITY                  /* define if using salinity */\n#define SOLVE3D                   /* define if solving 3D primitive equations */\n#define MASKING                   /* define if there is land in the domain */\n#define TS_U3HADVECTION           /* Third-order upstream horizontal advection of tracers */\n#define TS_C4VADVECTION           /* Fourth-order centered vertical advection of tracers */\n#define TS_DIF2                   /* use to turn ON or OFF harmonic horizontal mixing  */\n#define MIX_S_UV                  /* mixing along constant S-surfaces */\n#define UV_VIS2                   /* turn ON Laplacian horizontal mixing */\n#define AVERAGES\n#define UV_QDRAG\n#define MIX_S_TS\n\n#define  MY25_MIXING\n#ifdef MY25_MIXING\n#define N2S2_HORAVG\n#define KANTHA_CLAYSON\n#endif\n\n#define ANA_BSFLUX                /* analytical bottom salinity flux */\n#define ANA_BTFLUX                /* analytical bottom temperature flux */\n#define ANA_SSFLUX\n\n#define BULK_FLUXES               /* turn ON bulk fluxes computation */\n#define CLOUDS\n#define LONGWAVE\n#define SOLAR_SOURCE\n\"\"\");","category":"page"},{"location":"01_build_roms/","page":"Compilation","title":"Compilation","text":"The ROMS wiki give more information about the compiler different options.","category":"page"},{"location":"01_build_roms/#Compiling-the-model-code","page":"Compilation","title":"Compiling the model code","text":"","category":"section"},{"location":"01_build_roms/","page":"Compilation","title":"Compilation","text":"ROMS can use the MPI (Message Passing Interface) or OpenMP (Open Multi-Processing) for parallelization (but not both at the same time):","category":"page"},{"location":"01_build_roms/","page":"Compilation","title":"Compilation","text":"use_mpi = false;\nuse_openmp = true;\n# or\n##use_mpi = true;\n##use_openmp = false;","category":"page"},{"location":"01_build_roms/","page":"Compilation","title":"Compilation","text":"ROMS can either be build (i.e. compiled) the shell script build_roms.sh or with the julia script ROMS.build.","category":"page"},{"location":"01_build_roms/","page":"Compilation","title":"Compilation","text":"roms_application is a descriptive name of the domain or the particular application that the use can choose. We compile ROMS with the GNU Fortran compiler using 8 jobs for compilation.","category":"page"},{"location":"01_build_roms/","page":"Compilation","title":"Compilation","text":"roms_application = \"LigurianSea\"\nfortran_compiler = \"gfortran\"\njobs = 2\nlogfile = \"roms_build.log\"\n\nROMS.build(romsdir,roms_application,modeldir;\n           stdout = logfile,\n           jobs,\n           fortran_compiler,\n           use_openmp,\n           use_mpi)","category":"page"},{"location":"01_build_roms/","page":"Compilation","title":"Compilation","text":"ar: creating Build_roms/libROMS.a\n","category":"page"},{"location":"01_build_roms/","page":"Compilation","title":"Compilation","text":"The first and last 5 lines of this log file:","category":"page"},{"location":"01_build_roms/","page":"Compilation","title":"Compilation","text":"println.(collect(eachline(logfile))[1:5]);\nprintln(\"...\")\nprintln.(collect(eachline(logfile))[end-5:end]);","category":"page"},{"location":"01_build_roms/","page":"Compilation","title":"Compilation","text":"cp -f /usr/include/netcdf.mod Build_roms\ncp -f /usr/include/typesizes.mod Build_roms\ncp -p /home/runner/make_macros.mk Build_roms\n/usr/bin/cpp -P -traditional -w               -D_OPENMP -DLINUX -DX86_64 -DGFORTRAN -D'ROOT_DIR=\"/home/runner/src/roms\"' -DLigurianSea -D'HEADER=\"liguriansea.h\"' -D'ROMS_HEADER=\"/home/runner/ROMS-implementation-test/liguriansea.h\"' -DNestedGrids= -D'ANALYTICAL_DIR=\"/home/runner/ROMS-implementation-test\"' -D'MY_ANALYTICAL=\"on\"' -D'GIT_URL=\"https://github.com/myroms/roms\"' -D'GIT_REV=\"f4ef852c084bccd1009b3ff4db8d1d059569b0e2\"' -D'SVN_URL=\"https://www.myroms.org/svn/src/trunk\"' -D'SVN_REV=\"1171\"' -IROMS/Include -I/home/runner/ROMS-implementation-test -IROMS/Nonlinear -IROMS/Nonlinear/Biology -IROMS/Nonlinear/Sediment -IROMS/Utility -IROMS/Drivers -IROMS/Functionals -I/home/runner/ROMS-implementation-test -IMaster -ICompilers -D'HEADER_DIR=\"/home/runner/ROMS-implementation-test\"'  ROMS/Nonlinear/bbl.F > Build_roms/bbl.f90\n/usr/bin/cpp -P -traditional -w               -D_OPENMP -DLINUX -DX86_64 -DGFORTRAN -D'ROOT_DIR=\"/home/runner/src/roms\"' -DLigurianSea -D'HEADER=\"liguriansea.h\"' -D'ROMS_HEADER=\"/home/runner/ROMS-implementation-test/liguriansea.h\"' -DNestedGrids= -D'ANALYTICAL_DIR=\"/home/runner/ROMS-implementation-test\"' -D'MY_ANALYTICAL=\"on\"' -D'GIT_URL=\"https://github.com/myroms/roms\"' -D'GIT_REV=\"f4ef852c084bccd1009b3ff4db8d1d059569b0e2\"' -D'SVN_URL=\"https://www.myroms.org/svn/src/trunk\"' -D'SVN_REV=\"1171\"' -IROMS/Include -I/home/runner/ROMS-implementation-test -IROMS/Nonlinear -IROMS/Nonlinear/Biology -IROMS/Nonlinear/Sediment -IROMS/Utility -IROMS/Drivers -IROMS/Functionals -I/home/runner/ROMS-implementation-test -IMaster -ICompilers -D'HEADER_DIR=\"/home/runner/ROMS-implementation-test\"'  ROMS/Nonlinear/bc_2d.F > Build_roms/bc_2d.f90\n...\ncd Build_roms; /usr/bin/gfortran -c -frepack-arrays -fallow-argument-mismatch        -O3 -ffast-math -fopenmp -static-libgcc esmf_roms.f90\ncd Build_roms; /usr/bin/gfortran -c -frepack-arrays -fallow-argument-mismatch        -O3 -ffast-math -fopenmp -static-libgcc esmf_esm.f90\ncd Build_roms; /usr/bin/gfortran -c -frepack-arrays -fallow-argument-mismatch        -O3 -ffast-math -fopenmp -static-libgcc master.f90\nar -r Build_roms/libROMS.a Build_roms/bbl.o Build_roms/bc_2d.o Build_roms/bc_3d.o Build_roms/bc_4d.o Build_roms/bc_bry2d.o Build_roms/bc_bry3d.o Build_roms/bulk_flux.o Build_roms/bvf_mix.o Build_roms/conv_2d.o Build_roms/conv_3d.o Build_roms/conv_bry2d.o Build_roms/conv_bry3d.o Build_roms/diag.o Build_roms/exchange_2d.o Build_roms/exchange_3d.o Build_roms/exchange_4d.o Build_roms/forcing.o Build_roms/frc_adjust.o Build_roms/get_data.o Build_roms/get_idata.o Build_roms/gls_corstep.o Build_roms/gls_prestep.o Build_roms/hmixing.o Build_roms/ini_fields.o Build_roms/initial.o Build_roms/interp_floats.o Build_roms/lmd_bkpp.o Build_roms/lmd_skpp.o Build_roms/lmd_swfrac.o Build_roms/lmd_vmix.o Build_roms/main2d.o Build_roms/main3d.o Build_roms/mpdata_adiff.o Build_roms/my25_corstep.o Build_roms/my25_prestep.o Build_roms/nesting.o Build_roms/obc_adjust.o Build_roms/obc_volcons.o Build_roms/omega.o Build_roms/output.o Build_roms/pre_step3d.o Build_roms/prsgrd.o Build_roms/radiation_stress.o Build_roms/rho_eos.o Build_roms/rhs3d.o Build_roms/set_avg.o Build_roms/set_data.o Build_roms/set_depth.o Build_roms/set_massflux.o Build_roms/set_tides.o Build_roms/set_vbc.o Build_roms/set_zeta.o Build_roms/step2d.o Build_roms/step3d_t.o Build_roms/step3d_uv.o Build_roms/step_floats.o Build_roms/t3dbc_im.o Build_roms/t3dmix.o Build_roms/tkebc_im.o Build_roms/u2dbc_im.o Build_roms/u3dbc_im.o Build_roms/uv3dmix.o Build_roms/v2dbc_im.o Build_roms/v3dbc_im.o Build_roms/vwalk_floats.o Build_roms/wetdry.o Build_roms/wvelocity.o Build_roms/zetabc.o Build_roms/biology.o Build_roms/biology_floats.o Build_roms/sed_bed.o Build_roms/sed_bedload.o Build_roms/sed_fluxes.o Build_roms/sed_settling.o Build_roms/sed_surface.o Build_roms/sediment.o Build_roms/analytical.o Build_roms/ADfromTL.o Build_roms/abort.o Build_roms/array_modes.o Build_roms/back_cost.o Build_roms/cgradient.o Build_roms/check_multifile.o Build_roms/checkadj.o Build_roms/checkdefs.o Build_roms/checkerror.o Build_roms/checkvars.o Build_roms/close_io.o Build_roms/comp_Jb0.o Build_roms/congrad.o Build_roms/convolve.o Build_roms/cost_grad.o Build_roms/dateclock.o Build_roms/def_avg.o Build_roms/def_dai.o Build_roms/def_diags.o Build_roms/def_dim.o Build_roms/def_error.o Build_roms/def_floats.o Build_roms/def_gst.o Build_roms/def_hessian.o Build_roms/def_his.o Build_roms/def_impulse.o Build_roms/def_info.o Build_roms/def_ini.o Build_roms/def_lanczos.o Build_roms/def_mod.o Build_roms/def_norm.o Build_roms/def_quick.o Build_roms/def_rst.o Build_roms/def_state.o Build_roms/def_station.o Build_roms/def_tides.o Build_roms/def_var.o Build_roms/destroy.o Build_roms/distribute.o Build_roms/dotproduct.o Build_roms/edit_multifile.o Build_roms/equilibrium_tide.o Build_roms/erf.o Build_roms/extract_obs.o Build_roms/extract_sta.o Build_roms/frc_weak.o Build_roms/gasdev.o Build_roms/get_2dfld.o Build_roms/get_2dfldr.o Build_roms/get_3dfld.o Build_roms/get_3dfldr.o Build_roms/get_bounds.o Build_roms/get_cycle.o Build_roms/get_env.o Build_roms/get_grid.o Build_roms/get_gst.o Build_roms/get_hash.o Build_roms/get_metadata.o Build_roms/get_ngfld.o Build_roms/get_ngfldr.o Build_roms/get_nudgcoef.o Build_roms/get_state.o Build_roms/get_varcoords.o Build_roms/get_wetdry.o Build_roms/grid_coords.o Build_roms/ini_adjust.o Build_roms/ini_hmixcoef.o Build_roms/ini_lanczos.o Build_roms/inner2state.o Build_roms/inp_decode.o Build_roms/inp_par.o Build_roms/inquiry.o Build_roms/interpolate.o Build_roms/lanc_resid.o Build_roms/lbc.o Build_roms/lubksb.o Build_roms/ludcmp.o Build_roms/memory.o Build_roms/metrics.o Build_roms/mp_exchange.o Build_roms/mp_routines.o Build_roms/nf_fread2d.o Build_roms/nf_fread2d_bry.o Build_roms/nf_fread3d.o Build_roms/nf_fread3d_bry.o Build_roms/nf_fread4d.o Build_roms/nf_fwrite2d.o Build_roms/nf_fwrite2d_bry.o Build_roms/nf_fwrite3d.o Build_roms/nf_fwrite3d_bry.o Build_roms/nf_fwrite4d.o Build_roms/normalization.o Build_roms/nrutil.o Build_roms/ntimestep.o Build_roms/obs_cost.o Build_roms/obs_depth.o Build_roms/obs_initial.o Build_roms/obs_k2z.o Build_roms/obs_read.o Build_roms/obs_write.o Build_roms/packing.o Build_roms/posterior.o Build_roms/posterior_var.o Build_roms/ran1.o Build_roms/ran_state.o Build_roms/random_ic.o Build_roms/read_asspar.o Build_roms/read_biopar.o Build_roms/read_couplepar.o Build_roms/read_fltbiopar.o Build_roms/read_fltpar.o Build_roms/read_phypar.o Build_roms/read_sedpar.o Build_roms/read_stapar.o Build_roms/regrid.o Build_roms/rep_matrix.o Build_roms/round.o Build_roms/rpcg_lanczos.o Build_roms/set_2dfld.o Build_roms/set_2dfldr.o Build_roms/set_3dfld.o Build_roms/set_3dfldr.o Build_roms/set_contact.o Build_roms/set_diags.o Build_roms/set_grid.o Build_roms/set_masks.o Build_roms/set_ngfld.o Build_roms/set_ngfldr.o Build_roms/set_pio.o Build_roms/set_scoord.o Build_roms/set_weights.o Build_roms/shapiro.o Build_roms/sqlq.o Build_roms/state_addition.o Build_roms/state_copy.o Build_roms/state_dotprod.o Build_roms/state_initialize.o Build_roms/state_join.o Build_roms/state_product.o Build_roms/state_read.o Build_roms/state_scale.o Build_roms/stats.o Build_roms/stats_modobs.o Build_roms/stdinp_mod.o Build_roms/stiffness.o Build_roms/strings.o Build_roms/sum_grad.o Build_roms/sum_imp.o Build_roms/tadv.o Build_roms/tides_date.o Build_roms/time_corr.o Build_roms/timers.o Build_roms/uv_rotate.o Build_roms/vorticity.o Build_roms/white_noise.o Build_roms/wpoints.o Build_roms/wrt_aug_imp.o Build_roms/wrt_avg.o Build_roms/wrt_dai.o Build_roms/wrt_diags.o Build_roms/wrt_error.o Build_roms/wrt_evolved.o Build_roms/wrt_floats.o Build_roms/wrt_gst.o Build_roms/wrt_hessian.o Build_roms/wrt_his.o Build_roms/wrt_impulse.o Build_roms/wrt_info.o Build_roms/wrt_ini.o Build_roms/wrt_quick.o Build_roms/wrt_rst.o Build_roms/wrt_state.o Build_roms/wrt_station.o Build_roms/wrt_tides.o Build_roms/yaml_parser.o Build_roms/zeta_balance.o Build_roms/i4dvar.o Build_roms/r4dvar.o Build_roms/rbl4dvar.o Build_roms/mod_arrays.o Build_roms/mod_average.o Build_roms/mod_bbl.o Build_roms/mod_behavior.o Build_roms/mod_biology.o Build_roms/mod_boundary.o Build_roms/mod_clima.o Build_roms/mod_coupler.o Build_roms/mod_coupling.o Build_roms/mod_diags.o Build_roms/mod_eclight.o Build_roms/mod_eoscoef.o Build_roms/mod_floats.o Build_roms/mod_forces.o Build_roms/mod_fourdvar.o Build_roms/mod_grid.o Build_roms/mod_iounits.o Build_roms/mod_kinds.o Build_roms/mod_mixing.o Build_roms/mod_ncparam.o Build_roms/mod_nesting.o Build_roms/mod_netcdf.o Build_roms/mod_ocean.o Build_roms/mod_parallel.o Build_roms/mod_param.o Build_roms/mod_pio_netcdf.o Build_roms/mod_scalars.o Build_roms/mod_sedbed.o Build_roms/mod_sediment.o Build_roms/mod_sources.o Build_roms/mod_stepping.o Build_roms/mod_storage.o Build_roms/mod_strings.o Build_roms/mod_tides.o Build_roms/cmeps_roms.o Build_roms/coupler.o Build_roms/esmf_atm.o Build_roms/esmf_data.o Build_roms/esmf_esm.o Build_roms/esmf_ice.o Build_roms/esmf_roms.o Build_roms/esmf_wav.o Build_roms/master.o Build_roms/mod_esmf_esm.o Build_roms/propagator.o Build_roms/roms_kernel.o\nranlib Build_roms/libROMS.a\n/usr/bin/gfortran -frepack-arrays -fallow-argument-mismatch        -O3 -ffast-math -fopenmp -static-libgcc  Build_roms/cmeps_roms.o Build_roms/coupler.o Build_roms/esmf_atm.o Build_roms/esmf_data.o Build_roms/esmf_esm.o Build_roms/esmf_ice.o Build_roms/esmf_roms.o Build_roms/esmf_wav.o Build_roms/master.o Build_roms/mod_esmf_esm.o Build_roms/propagator.o Build_roms/roms_kernel.o -o /home/runner/ROMS-implementation-test/romsO -LBuild_roms -lROMS -L/usr/lib/x86_64-linux-gnu -lnetcdff -Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -flto=auto -Wl,-z,relro -Wl,-z,now -lnetcdf -lnetcdf -lm\n","category":"page"},{"location":"additional_info/#Additional-topics","page":"Additional information","title":"Additional topics","text":"","category":"section"},{"location":"additional_info/#Nudging-towards-\"climatology\"","page":"Additional information","title":"Nudging towards \"climatology\"","text":"","category":"section"},{"location":"additional_info/","page":"Additional information","title":"Additional information","text":"The nudging towards \"climatology\" is an optional step to avoid issue (like sharp gradients) near the open sea boundaries. A flow relexation zone can be implemented in ROMS by using the followings settings:","category":"page"},{"location":"additional_info/","page":"Additional information","title":"Additional information","text":"LtracerCLM == T T  ! enable processing of CLIM data\nLnudgeTCLM == T T  ! nudge to CLIM data\nTNUDG == 2*10.0d0                    ! days","category":"page"},{"location":"additional_info/","page":"Additional information","title":"Additional information","text":"Make nudging on inflow is stronger than on outflow","category":"page"},{"location":"additional_info/","page":"Additional information","title":"Additional information","text":"OBCFAC == 10.0d0                      ! nondimensional","category":"page"},{"location":"additional_info/","page":"Additional information","title":"Additional information","text":"Set also NUDNAME to the file name create by the julia script.","category":"page"},{"location":"additional_info/#Atmospheric-forcing-fields","page":"Additional information","title":"Atmospheric forcing fields","text":"","category":"section"},{"location":"additional_info/","page":"Additional information","title":"Additional information","text":"For the Ligurian Sea, necessary parameters have already been prepared and are available in the file ROMS-implementation.zip. It containts data download the from","category":"page"},{"location":"additional_info/","page":"Additional information","title":"Additional information","text":"the ECMWF operational archive (Atmosphere/ecmwf_operational_archive_2018-12-01T00:00:00_2020-01-01T00:00:00.nc). This NetCDF file needs to be converted by the julia function ROMS.prepare_ecmwf.","category":"page"},{"location":"additional_info/","page":"Additional information","title":"Additional information","text":"The remaining of this section explained how to download data from the ECMWF operational archive (e.g. for a different domain). These instructions are not needed now.\nAdapt the file name, longitude/latitude and time range (start one day earlier, and finish one day later) in forcing_ecmwf.py and execute the script as follows:","category":"page"},{"location":"additional_info/","page":"Additional information","title":"Additional information","text":"python3 forcing_ecmwf.py","category":"page"},{"location":"additional_info/","page":"Additional information","title":"Additional information","text":"List of variables (*: quantities accumulated over the integration period (\"step\"))","category":"page"},{"location":"additional_info/","page":"Additional information","title":"Additional information","text":"NetCDF Variable name Description\nmsl Mean sea level pressure\nu10 10 metre U wind component\nv10 10 metre V wind component\nt2m 2 metre temperature\nd2m 2 metre dewpoint temperature\ntcc Total cloud cover*\nsshf Surface sensible heat flux*\nstrd Surface thermal radiation downwards*\nssr Surface net solar radiation*\nstr Surface net thermal radiation*\newss Eastward turbulent surface stress*\nnsss Northward turbulent surface stress*\ne Evaporation*\nro Runoff*\ntp Total precipitation*\nsst Sea surface temperature\npar Photosynthetically active radiation at the surface*","category":"page"},{"location":"additional_info/#Validation","page":"Additional information","title":"Validation","text":"","category":"section"},{"location":"additional_info/","page":"Additional information","title":"Additional information","text":"Check out satellite data (e.g. sea surface temperature, sea surface height) at:","category":"page"},{"location":"additional_info/","page":"Additional information","title":"Additional information","text":"CMEMS\nPODAAC NASA","category":"page"},{"location":"additional_info/","page":"Additional information","title":"Additional information","text":"Make some comparison with satellite and the downloaded in situ observation","category":"page"},{"location":"additional_info/#Hydrodynamic-model-troubleshooting","page":"Additional information","title":"Hydrodynamic model troubleshooting","text":"","category":"section"},{"location":"additional_info/","page":"Additional information","title":"Additional information","text":"Hydrodynamic model troubleshooting","category":"page"},{"location":"additional_info/#More-information","page":"Additional information","title":"More information","text":"","category":"section"},{"location":"additional_info/","page":"Additional information","title":"Additional information","text":"ROMS Wiki\nROMS Wiki Frequently Asked Questions\nK. Hedström. 2016. Technical Manual for a Coupled Sea-Ice/Ocean Circulation Model (Version 4). U.S. Dept. of the Interior, Bureau of Ocean Energy Management, Alaska OCS Region. OCS, Study BOEM 2016-037. 176 pp.","category":"page"},{"location":"optional/#Optional-packages","page":"Optional packages","title":"Optional packages","text":"","category":"section"},{"location":"optional/","page":"Optional packages","title":"Optional packages","text":"For CMEMS data, you need optionally the python package copernicusmarine (installation instructions).","category":"page"},{"location":"optional/","page":"Optional packages","title":"Optional packages","text":"For example:","category":"page"},{"location":"optional/","page":"Optional packages","title":"Optional packages","text":"python3 -m pip install copernicusmarine","category":"page"},{"location":"optional/","page":"Optional packages","title":"Optional packages","text":"Normally you will see the warning WARNING: The script motuclient is installed in '.../.local/bin' which is not on PATH. Consider adding this directory to PATH. You need to add the following line to the file .bashrc located in your home directory (at the end of this file on a separate line):","category":"page"},{"location":"optional/","page":"Optional packages","title":"Optional packages","text":"export PATH=\"$HOME/.local/bin:$PATH\"","category":"page"},{"location":"optional/","page":"Optional packages","title":"Optional packages","text":"In a terminal execute the following so that this change takes effect:","category":"page"},{"location":"optional/","page":"Optional packages","title":"Optional packages","text":"source ~/.bashrc","category":"page"},{"location":"optional/","page":"Optional packages","title":"Optional packages","text":"Check the copernicusmarine (it may return vUnknown, but it should not return No module named copernicusmarine)","category":"page"},{"location":"optional/","page":"Optional packages","title":"Optional packages","text":"copernicusmarine --version","category":"page"},{"location":"reference/#Reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"reference/#Model-grid","page":"Reference","title":"Model grid","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"ROMS.create_grid\nROMS.smoothgrid\nROMS.stiffness_ratios\nROMS.reduce_res\nROMS.stretching\nROMS.Grid\nROMS.generate_grid\nROMS.nudgecoef\nROMS.diffusion2!","category":"page"},{"location":"reference/#ROMS.create_grid","page":"Reference","title":"ROMS.create_grid","text":"ROMS.create_grid(fname,h,f,lon_r,lat_r,mask_r,angle,pm,pn,dndx,dmde)\n\nCreate a NetCDF grid file fname using the bathymetry h, Coriolis parameter f and longitude, latitude, mask, angle and strechting factors are rho-points.\n\nnote: Note\nThis function currently only works for non-rotated grids (angle = 0) and the spherical grids.\n\n\n\n\n\n","category":"function"},{"location":"reference/#ROMS.smoothgrid","page":"Reference","title":"ROMS.smoothgrid","text":"hsmooth = smoothgrid(h,hmin,rmax)\n\nSmooth the topography to get a maximum r factor equalt to rmax\n\nThe original code is from Pierrick Penven from Roms_tools. Copyright (c) 2002-2006 by Pierrick Penven, GPL\n\n\n\n\n\n","category":"function"},{"location":"reference/#ROMS.stiffness_ratios","page":"Reference","title":"ROMS.stiffness_ratios","text":"rx0,rx1 = ROMS.stiffness_ratios(mask_u,mask_v,z_w)\nrx0,rx1 = ROMS.stiffness_ratios(domain)\n\nCompute maximum grid stiffness ratios following Beckmann and Haidvogel (rx0) and Haney (rx1).\n\n\n\n\n\n","category":"function"},{"location":"reference/#ROMS.reduce_res","page":"Reference","title":"ROMS.reduce_res","text":" field = reduce_res(field,red);\n\nreduce resolution of field field by a factor \"red\"\n\n\n\n\n\n","category":"function"},{"location":"reference/#ROMS.stretching","page":"Reference","title":"ROMS.stretching","text":"s,C = stretching(Vstretching, theta_s, theta_b, hc, N, kgrid, report)\n\nCompute ROMS vertical coordinate stretching function.\n\nGiven vertical terrain-following vertical stretching parameters, this routine computes the vertical stretching function used in ROMS vertical coordinate transformation. Check the following (link)[https://www.myroms.org/wiki/index.php/Vertical_S-coordinate] for details:\n\nOn Input:\n\nVstretching:   Vertical stretching function:\n\n                   Vstretching = 1,  original (Song and Haidvogel, 1994)\n                   Vstretching = 2,  A. Shchepetkin (UCLA-ROMS, 2005)\n                   Vstretching = 3,  R. Geyer BBL refinement\n                   Vstretching = 4,  A. Shchepetkin (UCLA-ROMS, 2010)\n                   Vstretching = 5,  Quadractic (Souza et al., 2015)\n\ntheta_s:       S-coordinate surface control parameter (scalar)\ntheta_b:       S-coordinate bottom control parameter (scalar)\nhc:            Width (m) of surface or bottom boundary layer in which                  higher vertical resolution is required during                  stretching (scalar)\nN:             Number of vertical levels (scalar)\nkgrid         Depth grid type logical switch:                  kgrid = 0,        function at vertical RHO-points                  kgrid = 1,        function at vertical W-points\nreport        Flag to report detailed information (OPTIONAL):                  report = false,   do not report                  report = true,    report information\n\nOn Output:\n\ns:             S-coordinate independent variable, [-1 <= s <= 0] at                  vertical RHO- or W-points (vector)\nC:             Nondimensional, monotonic, vertical stretching function,                  C(s), 1D array, [-1 <= C(s) <= 0]\n\nThe code is ported from the matlab code stretching.m from Hernan G. Arango. Copyright (c) 2002-2020 The ROMS/TOMS Group, Licensed under a MIT/X style license\n\n\n\n\n\n","category":"function"},{"location":"reference/#ROMS.Grid","page":"Reference","title":"ROMS.Grid","text":"grid = ROMS.Grid(grid_fname,opt)\n\nLoads the ROMS grid from a NetCDF file grid_fname. The grid structure contains the longitude, latitude, depth (z), angle and mask at rho, u, v and w points for a C-grid.\n\nnote: Note\ngrid.z corresponds to an elevation equal to zero.\n\nExample\n\nopt = (\n    Tcline = 50,   # m\n    theta_s = 5,   # surface refinement\n    theta_b = 0.4, # bottom refinement\n    nlevels = 32,  # number of vertical levels\n    Vtransform  = 2,\n    Vstretching = 4,\n)\ngrid = ROMS.Grid(expanduser(\"~/Models/LS2v/LS2v.nc\"),opt)\n\n\n\n\n\n","category":"type"},{"location":"reference/#ROMS.generate_grid","page":"Reference","title":"ROMS.generate_grid","text":"ROMS.generate_grid(grid_fname,bath_name,xr,yr,red,opt,hmin,rmax)\n\nGenerate the netCDF file grid_fname representing the model grid from the bathymetry file bath_name. The domain is bounded by the longitude range xr and the latitude range yr. The resolution of the bathymetry is reduced by the factors red[1] and red[2] in the longitude and latitude directions. opt is tuple with additional parameters describing the vertical axis. hmin and rmax is the minimum depth and rmax is the smoothness parameter of the bathymetry. The r parameter is defined as:\n\nr = maxleft( undersetijmax frach_ij - h_i+1jh_ij + h_i+1j  undersetijmax frach_ij - h_ij+1h_ij + h_ij+1 right)\n\nThe parameter opt contains for example:\n\n# model specific parameters\nopt = (\n    Tcline = 50,   # m\n    theta_s = 5,   # surface refinement\n    theta_b = 0.4, # bottom refinement\n    nlevels = 32,  # number of vertical levels\n    Vtransform  = 2,\n    Vstretching = 4,\n)\n\n\n\n\n\n","category":"function"},{"location":"reference/#ROMS.nudgecoef","page":"Reference","title":"ROMS.nudgecoef","text":"nudgecoef(domain,nudge_filename,alpha,Niter,halo,tscale; max_tscale = 5e5)\n\nGenerate trace nudging coefficients with a value of 1/tscale at the open boundaries over a halo grid cells. coefficients field smoothed spatially with a diffusion coefficient alpha over Niter iterations. For grid cells where the nudging time scale exceeds max_tscale, nudging is disabled (coefficient is set to zero).\n\n\n\n\n\n","category":"function"},{"location":"reference/#ROMS.diffusion2!","page":"Reference","title":"ROMS.diffusion2!","text":" diffusion2!(f,alpha,Niter)\n\nTwo-dimensional diffusion of field f. f is the initial condition of field. alpha is a vector or tuple with two elements corresponding to the diffusion coefficient (multiplied by grid spacing) for the two dimensions. Niter is the number of iterations. On output, f is the field after Niter iterations.\n\n\n\n\n\n","category":"function"},{"location":"reference/#Bathymetry","page":"Reference","title":"Bathymetry","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"ROMS.gebco_load","category":"page"},{"location":"reference/#ROMS.gebco_load","page":"Reference","title":"ROMS.gebco_load","text":"x,y,b = gebco_load(bath_name,xr,yr)\n\nLoads GEBCO bathymetry with lon and lat range xr, yr.\n\n\n\n\n\n","category":"function"},{"location":"reference/#Boundary-conditions-and-initial-conditions","page":"Reference","title":"Boundary conditions and initial conditions","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"ROMS.CMEMS_zarr\nROMS.load\nROMS.interp_clim\nROMS.extract_ic\nROMS.extract_bc\nROMS.whenopen","category":"page"},{"location":"reference/#ROMS.CMEMS_zarr","page":"Reference","title":"ROMS.CMEMS_zarr","text":"ds = ROMS.CMEMS_zarr(product_id,mapping,cachedir;\n                chunks = 60,\n                time_shift = 0,\n                kwargs...\n                )\n\nReturns a structure ds to connect to a CMEMS zarr server. The mapping parameter contains a dictorary linking the NetCDF CF standard namer to the underlying NetCDF variable names and the product identifers (more information is available in the product user manual). cachedir is a directory where the products are downloaded for caching.\n\nWhile for most datasets (and CMEMS in the past) the time represents the central time the time axis. However since 2024, the time in the CMEMS Zarr data represents now the beginning of the time interval. Therefore time_shift has to be added to the time variable to account for this difference. For example, if for a daily dataset, the first time instance is the average from 2000-01-01:00:00:00 to 2000-01-02:00:00:00, then the Zarr file records 2000-01-01:00:00:00 (the beginning for the averaging interval) rather than 2000-01-01:12:00:00 (the center for the averaging interval). In this case, time_shift should be 12*60*60 (12 hours in seconds).\n\nExample\n\nThe  values of product_id and mapping (with dataset_id)  below are specific to the Mediterranean Sea and must be adapted for other domains.\n\noutdir = \"/tmp\"\nproduct_id = \"MEDSEA_MULTIYEAR_PHY_006_004\"\nmapping = Dict(\n    # var  dataset_id\n    :sea_surface_height_above_geoid => \"med-cmcc-ssh-an-fc-d\",\n    :sea_water_potential_temperature => \"med-cmcc-tem-an-fc-d\",\n    :sea_water_salinity => \"med-cmcc-sal-an-fc-d\",\n    :eastward_sea_water_velocity => \"med-cmcc-cur-an-fc-d\",\n    :northward_sea_water_velocity => \"med-cmcc-cur-an-fc-d\",\n)\n\ndataset = ROMS.CMEMS_zarr(product_id,mapping,outdir,time_shift = 12*60*60)\n\n\n\n\n\n","category":"function"},{"location":"reference/#ROMS.load","page":"Reference","title":"ROMS.load","text":"v,(x,y,z,t) = ROMS.load(ds,name::Symbol; kwargs...)\n\nLoads a variable from a remote resource ds. name is the NetCDF CF standard name.\n\n\n\n\n\n","category":"function"},{"location":"reference/#ROMS.interp_clim","page":"Reference","title":"ROMS.interp_clim","text":"ROMS.interp_clim(domain,clim_filename,dataset,timerange;\n                 padding = 0.5,\n                 missing_value = -9999.)\n\nInterpolate dataset on the the model grid domain and creating the climatology file clim_filename for all dates between timerange[1] and timerange[2].\n\n\n\n\n\n","category":"function"},{"location":"reference/#ROMS.extract_ic","page":"Reference","title":"ROMS.extract_ic","text":"ROMS.extract_ic(domain,clim_filename,icfile,t0::DateTime;\n                time_origin = DateTime(1858,11,17))\n\nFrom the climatology clim_filename extract a single time instance at the time t0 (or the nearest) and save the result into icfile.\n\n\n\n\n\n","category":"function"},{"location":"reference/#ROMS.extract_bc","page":"Reference","title":"ROMS.extract_bc","text":"ROMS.extract_bc(domain,clim_filename,bc_filename; missing_value = 9999)\n\nFrom the climatology clim_filename extract the boundary conditions at all open boundaries (using the mask in domain) and save the result into the netCDF nc_filename.\n\n\n\n\n\n","category":"function"},{"location":"reference/#ROMS.whenopen","page":"Reference","title":"ROMS.whenopen","text":"LBC = ROMS.whenopen(domain::Grid,BC::AbstractString)\n\nROMS.whenopen returns a list of the four lateral boundary condition (corresponding to \"west\",\"south\",\"east\" and \"north\"). The corresponding elements of LBC will be \"Clo\" for closed boundaries for the provided BC for open boundary conditions (e.g. Cha, Fla, Rad, RadNud, as defined in the roms.in glossary).\n\n\n\n\n\n","category":"function"},{"location":"reference/#Atmospheric-forcings","page":"Reference","title":"Atmospheric forcings","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"ROMS.prepare_ecmwf\nROMS.gfs_url\nROMS.download_gfs\nROMS.prepare_gfs","category":"page"},{"location":"reference/#ROMS.prepare_ecmwf","page":"Reference","title":"ROMS.prepare_ecmwf","text":"ROMS.prepare_ecmwf(\n   atmo_fname,Vnames,filename_prefix,domain_name;\n   time_origin = DateTime(1858,11,17),\n   reset_accumulation = time -> Time(time) in (Time(0,0),Time(12,0)),\n)\n\nGenerate ROMS forcing fields from the ECMWF data file atmo_fname. Note that some variables are accumulated. Per default, the accumulation is reset at 00:00 and 12:00 UTC. The accumulation period is determined from the time resolution (usually 3 hours).\n\nNote ERA5 reanalysis (hourly data): Accumulations are performed over the hour.\n\nExample\n\ndatadir = \"...\"\natmo_fname = joinpath(datadir,\"ecmwf_sample_data.nc\")\nfilename_prefix = joinpath(datadir,\"liguriansea_\")\ndomain_name = \"Ligurian Sea Region\"\nVnames = [\"sustr\",\"svstr\",\"shflux\",\"swflux\",\"swrad\",\"Uwind\",\"Vwind\",\"lwrad\",\n    \"lwrad_down\",\"latent\",\"sensible\",\"cloud\",\"rain\",\"Pair\",\"Tair\",\"Qair\"]\nROMS.prepare_ecmwf(atmo_fname,Vnames,filename_prefix,domain_name)\n)\n\nBased on forcing/d_ecmwf2roms.m (svn revision 1102):\n\nCopyright (c) 2002-2017 The ROMS/TOMS Group      Hernan G. Arango\nLicensed under a MIT/X style license             John Wilkin\nSee License_ROMS.txt\n\n\n\n\n\n","category":"function"},{"location":"reference/#ROMS.gfs_url","page":"Reference","title":"ROMS.gfs_url","text":"url = ROMS.gfs_url(time,tau;\n         modelname = \"gfs\",\n         resolution = 0.25,\n         baseurl = \"https://rda.ucar.edu/thredds/dodsC/files/g/ds084.1/\")\n\nReturns the OPeNDAP url for the GFS data at time time (DateTime) and the forecast time tau (hours) from the archive specified at baseurl.\n\n\n\n\n\n","category":"function"},{"location":"reference/#ROMS.download_gfs","page":"Reference","title":"ROMS.download_gfs","text":"atmo_src = ROMS.download_gfs(xr,yr,tr,cachedir)\n\nDownloads GFS 0.25° model results from the NCAR Research Data Archive within the longitude range xr, latitude range yr and time range tr. Ranges are list of two elements with the start and end value. Results are saved in cachedir.\n\nSee ROMS.prepage_gfs for an example.\n\n\n\n\n\n","category":"function"},{"location":"reference/#ROMS.prepare_gfs","page":"Reference","title":"ROMS.prepare_gfs","text":"ROMS.prepare_gfs(\n   atmo_src,Vnames,filename_prefix,domain_name;\n   time_origin = DateTime(1858,11,17),\n)\n\nGenerate ROMS forcing fields from GFS data atmo_src (a generated by ROMS.download_gfs). The other arguments are the same as for ROMS.prepage_ecmwf. The example below shows all currently supported values for Vnames.\n\nExample\n\ntr = (DateTime(2019,1,1),DateTime(2019,1,7))\nxr = (7.5, 12.375)\nyr = (41.875, 44.625)\n\ncachedir = expanduser(\"~/tmp/GFS\")\natmo_src = ROMS.download_gfs(xr,yr,tr,cachedir)\n\nfilename_prefix = \"liguriansea_\"\ndomain_name = \"Ligurian Sea Region\"\nVnames = [\"sustr\",\"svstr\",\"swflux\",\"swrad\",\"Uwind\",\"Vwind\",\n          \"sensible\",\"cloud\",\"rain\",\"Pair\",\"Tair\",\"Qair\"]\nROMS.prepare_gfs(atmo_src,Vnames,filename_prefix,domain_name)\n)\n\n\n\n\n\n","category":"function"},{"location":"reference/#Thermodynamics","page":"Reference","title":"Thermodynamics","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"ROMS.vapor_pressure\nROMS.vapor_pressure_Buck\nROMS.relative_humidity\nROMS.latent_heat_of_vaporization","category":"page"},{"location":"reference/#ROMS.vapor_pressure","page":"Reference","title":"ROMS.vapor_pressure","text":"e = ROMS.vapor_pressure(T)\n\nactual vapor pressure in hPa (millibars) from dewpoint temperature T in degree Celsius using using [1]. If T is the air temperature, then  e is the saturated vapor pressure over liquid water is given by:\n\ne(T) = 611 cdot 10 ^ left(  frac75 T2377 + T right)\n\n[1] https://web.archive.org/web/20200926200733/https://www.weather.gov/media/epz/wxcalc/vaporPressure.pdf\n\n\n\n\n\n","category":"function"},{"location":"reference/#ROMS.vapor_pressure_Buck","page":"Reference","title":"ROMS.vapor_pressure_Buck","text":"e = ROMS.vapor_pressure_Buck(T)\n\nactual vapor pressure in hPa (millibars) from dewpoint temperature T in degree Celsius using using Buck (1996). If T is the air temperature, then  e is the saturated vapor pressure over liquid water is given by:\n\ne(T) = 61121 exp left(left( 18678 - fracT 2345right)left( fracT 25714 + T right)right)\n\n\n\n\n\n","category":"function"},{"location":"reference/#ROMS.relative_humidity","page":"Reference","title":"ROMS.relative_humidity","text":"rh = ROMS.relative_humidity(temperature_2m_C,dew_temperature_2m_C)\n\nCompute the relative humidity (between 0 and 100) from temperature at 2 m, and dew_temperature at 2 m) both in degree Celsius)\n\n[1] https://web.archive.org/web/20200926200733/https://www.weather.gov/media/epz/wxcalc/vaporPressure.pdf\n\n\n\n\n\n","category":"function"},{"location":"reference/#ROMS.latent_heat_of_vaporization","page":"Reference","title":"ROMS.latent_heat_of_vaporization","text":"λ = ROMS.latent_heat_of_vaporization(T)\n\nCompute the latent heat of vaporization λ (J/kg) of water at temperature T (in degree Celsius).\n\nThe function implements equation 2.55 (page 38) of Foken, T, 2008: Micrometeorology. Springer, Berlin, Germany.\n\n\n\n\n\n","category":"function"},{"location":"reference/","page":"Reference","title":"Reference","text":"ROMS.build\nROMS.run_model","category":"page"},{"location":"reference/#ROMS.build","page":"Reference","title":"ROMS.build","text":"ROMS.build(roms_application,modeldir;\n           stdout = stdout,\n           use_mpi = false,\n           use_openmp = false,\n           use_mpif90 = use_mpi,\n           use_netcdf4 = true,\n           my_header_dir = modeldir,\n           my_analytical_dir = modeldir,\n           fortran_compiler = \"ifort\",\n           clean = true,\n           jobs = 1,\n           bindir = modeldir,\n           extra_env = Dict(),\n           )\n\nCompile the ROMS source code with the application name roms_application and the ROMS project directory is the directory modeldir which will contain the produced binaries.\n\nSee build_roms.sh for more information.\n\n\n\n\n\n","category":"function"},{"location":"reference/#ROMS.run_model","page":"Reference","title":"ROMS.run_model","text":"ROMS.run_model(modeldir::AbstractString,romsin::AbstractString;\n         use_mpi = false,\n         use_openmp = false,\n         stdout = stdout,\n         mpiexec = \"mpiexec\",\n         np = 1)\n\nExecutes ROMS with the model directory modeldir (containing the ROMS binary) and the input file romsin using np processes (or threads for OpenMP).\n\n\n\n\n\n","category":"function"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"EditURL = \"../../examples/02_prep_roms.jl\"","category":"page"},{"location":"02_prep_roms/#Preparation-of-the-input-files-for-ROMS","page":"Preparation","title":"Preparation of the input files for ROMS","text":"","category":"section"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"The code here is also available as a notebook 02_prep_roms.ipynb.","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"ROMS needs several input files in the NetCDF format, in paricular:","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"the model grid\nthe initial conditions\nthe boundary conditions\nthe atmospheric forcing fields","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"Optionally","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"the climatology file\nthe field defining the nudging strength","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"This script can use multiple threads if julia was started with multi-threading (option -t/--threads or the environement variable JULIA_NUM_THREADS)","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"using Dates\nusing ROMS\nusing ROMS: whenopen\nusing Downloads: download","category":"page"},{"location":"02_prep_roms/#The-model-bathymetry","page":"Preparation","title":"The model bathymetry","text":"","category":"section"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"While the full GEBCO bathymetry is relatively large, where use here a subset of the global bathymetry to reduce the downloading time. (longitude from 5°E to 15°E and latitude from 40°N to 45°N)","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"bath_name = expanduser(\"~/Data/Bathymetry/gebco_30sec_1_ligurian_sea.nc\")\n\nif !isfile(bath_name)\n    mkpath(dirname(bath_name))\n    download(\"https://dox.ulg.ac.be/index.php/s/piwSaFP3nhM8jSD/download\",bath_name)\nend;","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"The time range for the simulation:","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"t0 start time\nt1 end time","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"t0 = DateTime(2023,1,1);\nt1 = DateTime(2023,1,4);","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"Define the bounding box the of the grid","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"# range of longitude\nxr = [7.6, 12.2];\n\n# range of latitude\nyr = [42, 44.5];\n\n# reduce bathymetry in x and y direction\nred = (4, 4)\n\n# maximum normalized topographic variations\nrmax = 0.4;\n\n# minimal depth\nhmin = 2; # m\n\n# name of folders and files\nmodeldir = expanduser(\"~/ROMS-implementation-test\")\n\n# The model grid (`GRDNAME` in roms.in)\ngrd_name = joinpath(modeldir,\"roms_grd_liguriansea.nc\");","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"Some parameters specific to the vertical coordinate system","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"opt = (\n    Tcline = 50,   # m\n    theta_s = 5,   # surface refinement\n    theta_b = 0.4, # bottom refinement\n    nlevels = 32,  # number of vertical levels\n    Vtransform  = 2,\n    Vstretching = 4,\n)","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"(Tcline = 50, theta_s = 5, theta_b = 0.4, nlevels = 32, Vtransform = 2, Vstretching = 4)","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"Create the model directory and generate the model grid","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"mkpath(modeldir);\n\ndomain = ROMS.generate_grid(grd_name,bath_name,xr,yr,red,opt,hmin,rmax);\n\n@info \"domain size $(size(domain.mask))\"","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":" Smooth the topography...\n  36 iterations - rmax = 0.39828464368061617\n Smooth the topography a bit more...\n  hmin = 2.0\nVtransform  = 2   ROMS-UCLA\n   igrid     = 1 at horizontal RHO-points\n\nVstretching = 4   Shchepetkin (2010)\n   kgrid    = 0   at vertical RHO-points\n   theta_s  = 5\n   theta_b  = 0.4\n   hc       = 50\n\n S-coordinate curves: k, s(k), C(k)\n\n     32    -1.562500000000e-02    -5.060164946710e-05\n     31    -4.687500000000e-02    -4.572401105559e-04\n     30    -7.812500000000e-02    -1.280298055894e-03\n     29    -1.093750000000e-01    -2.539560500182e-03\n     28    -1.406250000000e-01    -4.265266261424e-03\n     27    -1.718750000000e-01    -6.498792311199e-03\n     26    -2.031250000000e-01    -9.293584054181e-03\n     25    -2.343750000000e-01    -1.271634639800e-02\n     24    -2.656250000000e-01    -1.684851356914e-02\n     23    -2.968750000000e-01    -2.178801812466e-02\n     22    -3.281250000000e-01    -2.765138117566e-02\n     21    -3.593750000000e-01    -3.457614600596e-02\n     20    -3.906250000000e-01    -4.272367537770e-02\n     19    -4.218750000000e-01    -5.228232795041e-02\n     18    -4.531250000000e-01    -6.347102015626e-02\n     17    -4.843750000000e-01    -7.654316490419e-02\n     16    -5.156250000000e-01    -9.179095542844e-02\n     15    -5.468750000000e-01    -1.095499286006e-01\n     14    -5.781250000000e-01    -1.302036934689e-01\n     13    -6.093750000000e-01    -1.541886431904e-01\n     12    -6.406250000000e-01    -1.819983765227e-01\n     11    -6.718750000000e-01    -2.141874325067e-01\n     10    -7.031250000000e-01    -2.513737824031e-01\n      9    -7.343750000000e-01    -2.942393202666e-01\n      8    -7.656250000000e-01    -3.435273436662e-01\n      7    -7.968750000000e-01    -4.000357194613e-01\n      6    -8.281250000000e-01    -4.646040954176e-01\n      5    -8.593750000000e-01    -5.380931709292e-01\n      4    -8.906250000000e-01    -6.213537270252e-01\n      3    -9.218750000000e-01    -7.151829201676e-01\n      2    -9.531250000000e-01    -8.202653975901e-01\n      1    -9.843750000000e-01    -9.370972868551e-01\n\nVtransform  = 2   ROMS-UCLA\n   igrid     = 5 at horizontal RHO-points\n\nVstretching = 4   Shchepetkin (2010)\n   kgrid    = 1   at vertical W-points\n   theta_s  = 5\n   theta_b  = 0.4\n   hc       = 50\n\n S-coordinate curves: k, s(k), C(k)\n\n     32     0.000000000000e+00     0.000000000000e+00\n     31    -3.125000000000e-02    -2.027105200195e-04\n     30    -6.250000000000e-02    -8.157187016713e-04\n     29    -9.375000000000e-02    -1.853765651128e-03\n     28    -1.250000000000e-01    -3.341792624089e-03\n     27    -1.562500000000e-01    -5.315506910025e-03\n     26    -1.875000000000e-01    -7.822187499588e-03\n     25    -2.187500000000e-01    -1.092174369724e-02\n     24    -2.500000000000e-01    -1.468804314646e-02\n     23    -2.812500000000e-01    -1.921052856298e-02\n     22    -3.125000000000e-01    -2.459614455050e-02\n     21    -3.437500000000e-01    -3.097159680944e-02\n     20    -3.750000000000e-01    -3.848596528424e-02\n     19    -4.062500000000e-01    -4.731368954908e-02\n     18    -4.375000000000e-01    -5.765793793687e-02\n     17    -4.687500000000e-01    -6.975436012900e-02\n     16    -5.000000000000e-01    -8.387520422218e-02\n     15    -5.312500000000e-01    -1.003337511642e-01\n     14    -5.625000000000e-01    -1.194889786791e-01\n     13    -5.937500000000e-01    -1.417503093415e-01\n     12    -6.250000000000e-01    -1.675822183846e-01\n     11    -6.562500000000e-01    -1.975083703627e-01\n     10    -6.875000000000e-01    -2.321148135475e-01\n      9    -7.187500000000e-01    -2.720515804961e-01\n      8    -7.500000000000e-01    -3.180318172552e-01\n      7    -7.812500000000e-01    -3.708272899397e-01\n      6    -8.125000000000e-01    -4.312588001567e-01\n      5    -8.437500000000e-01    -5.001796956603e-01\n      4    -8.750000000000e-01    -5.784503244456e-01\n      3    -9.062500000000e-01    -6.669010130264e-01\n      2    -9.375000000000e-01    -7.662810584266e-01\n      1    -9.687500000000e-01    -8.771914691872e-01\n      0    -1.000000000000e+00    -1.000000000000e+00\n\n[ Info: domain size (138, 75)\n","category":"page"},{"location":"02_prep_roms/#The-boundary-and-initial-conditions","page":"Preparation","title":"The boundary and initial conditions","text":"","category":"section"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"# GCM interpolated on model grid (`CLMNAME` in roms.in)\nclm_name =  joinpath(modeldir,\"roms_clm_2023.nc\")\n\n# initial conditions (`ININAME` in roms.in)\nini_name =  joinpath(modeldir,\"roms_ini_2023.nc\")\n\n# boundary conditions (`BRYNAME` in roms.in)\nbry_name =  joinpath(modeldir,\"roms_bry_2023.nc\")\n\n# temporary directory of the OGCM data\noutdir = joinpath(modeldir,\"OGCM\")\nmkpath(outdir)","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"\"/home/runner/ROMS-implementation-test/OGCM\"","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"For CMEMS boundary conditions https://marine.copernicus.eu/:\nYou may need to adapt the CMEMS product_id and mapping (if the model domain is outside of the Mediterranean Sea)\nData will be downloaded and saved in NetCDF by \"chunks\" of 60 days in the folder OGCM under the content of the variable basedir\nYou need to remove the files in this directory if you rerun the script with a different time range.","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"Here we use the following dataset: https://doi.org/10.25423/CMCC/MEDSEAMULTIYEARPHY006004_E3R1","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"product_id = \"MEDSEA_MULTIYEAR_PHY_006_004\"","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"\"MEDSEA_MULTIYEAR_PHY_006_004\"","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"mapping the variable (CF names) with the CMEMS dataset_id","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"mapping = Dict(\n    :sea_surface_height_above_geoid => \"med-cmcc-ssh-rean-d\",\n    :sea_water_potential_temperature => \"med-cmcc-tem-rean-d\",\n    :sea_water_salinity => \"med-cmcc-sal-rean-d\",\n    :eastward_sea_water_velocity => \"med-cmcc-cur-rean-d\",\n    :northward_sea_water_velocity => \"med-cmcc-cur-rean-d\",\n)\n\ndataset = ROMS.CMEMS_zarr(product_id,mapping,outdir, time_shift = 12*60*60)","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"ROMS.CDMDataset{ZarrDatasets.ZarrDataset}(DataStructures.DefaultDict(:sea_water_salinity => \"https://s3.waw3-1.cloudferro.com/mdl-arco-time-035/arco/MEDSEA_MULTIYEAR_PHY_006_004/med-cmcc-sal-rean-d_202012/timeChunked.zarr\", :eastward_sea_water_velocity => \"https://s3.waw3-1.cloudferro.com/mdl-arco-time-035/arco/MEDSEA_MULTIYEAR_PHY_006_004/med-cmcc-cur-rean-d_202012/timeChunked.zarr\", :sea_surface_height_above_geoid => \"https://s3.waw3-1.cloudferro.com/mdl-arco-time-035/arco/MEDSEA_MULTIYEAR_PHY_006_004/med-cmcc-ssh-rean-d_202012/timeChunked.zarr\", :sea_water_potential_temperature => \"https://s3.waw3-1.cloudferro.com/mdl-arco-time-036/arco/MEDSEA_MULTIYEAR_PHY_006_004/med-cmcc-tem-rean-d_202012/timeChunked.zarr\", :northward_sea_water_velocity => \"https://s3.waw3-1.cloudferro.com/mdl-arco-time-035/arco/MEDSEA_MULTIYEAR_PHY_006_004/med-cmcc-cur-rean-d_202012/timeChunked.zarr\"), \"/home/runner/ROMS-implementation-test/OGCM\", Dict{Symbol, String}(), 60, Dict{Symbol, Any}(:_omitcode => [404, 403]), 43200)","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"Extent the time range by one extra day","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"ROMS.interp_clim(domain,clm_name,dataset,[t0-Dates.Day(1), t1+Dates.Day(1)])\n\nROMS.extract_ic(domain,clm_name,ini_name, t0);\nROMS.extract_bc(domain,clm_name,bry_name)","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"[ Info: download sea_surface_height_above_geoid in /home/runner/ROMS-implementation-test/OGCM/bc19f9716470e5766f561323c8885cbed77a46447b452f176394ca77e0c65331.nc (13149:13153)\n[ Info: download sea_water_potential_temperature in /home/runner/ROMS-implementation-test/OGCM/278703240e4f8873236513a37b3b39c6ccfdbd87ee127f6dddf7188cedc630b2.nc (13149:13153)\n[ Info: download sea_water_salinity in /home/runner/ROMS-implementation-test/OGCM/d35e5ad1eb56014e42eb24ad006e38931bab46134e7c4939caeeb9baa73d2a12.nc (13149:13153)\n[ Info: download eastward_sea_water_velocity in /home/runner/ROMS-implementation-test/OGCM/ab64aa3534519da56071be2caf1ecd6c4df88e5298dc1494bae6e2014f77881e.nc (13149:13153)\n[ Info: download northward_sea_water_velocity in /home/runner/ROMS-implementation-test/OGCM/0d19493ccd67b7f829dceaa66c2300299a80275ef965f5268e7e03aac0ab3b1a.nc (13149:13153)\n[ Info: load 2022-12-31T12:00:00\n[ Info: interpolate 2022-12-31T12:00:00\n[ Info: load 2023-01-01T12:00:00\n[ Info: interpolate 2023-01-01T12:00:00\n[ Info: load 2023-01-02T12:00:00\n[ Info: interpolate 2023-01-02T12:00:00\n[ Info: load 2023-01-03T12:00:00\n[ Info: interpolate 2023-01-03T12:00:00\n[ Info: load 2023-01-04T12:00:00\n[ Info: interpolate 2023-01-04T12:00:00\n[ Info: Request to initalize from 2023-01-01T00:00:00\n[ Info: Try to initalize from 2022-12-31T12:00:00\ncopy zeta\ncopy ubar\ncopy vbar\ncopy u\ncopy v\ncopy temp\ncopy salt\n[ Info: DSTART = 59945.0\n","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"Nudging coefficients (NUDNAME)","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"tscale = 7; # days\nalpha = 0.3;\nhalo = 2;\nNiter = 50\nmax_tscale = 5e5\n\nnud_name = joinpath(modeldir,\"roms_nud_$(tscale)_$(Niter).nc\")\ntracer_NudgeCoef = ROMS.nudgecoef(domain,nud_name,alpha,Niter,\n          halo,tscale; max_tscale = max_tscale);","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"[ Info: Number of sea grid cell:              5497\n[ Info: Number sea grid cell with nudging:    2807\n[ Info: Number sea grid cell without nudging: 2690\n","category":"page"},{"location":"02_prep_roms/#The-atmospheric-forcings","page":"Preparation","title":"The atmospheric forcings","text":"","category":"section"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"Prepare atmospheric forcings (FRCNAME)","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"ecmwf_fname = expanduser(\"~/Data/Atmosphere/ecmwf_operational_archive_2022-12-01_2024-02-01.nc\")\n\nif !isfile(ecmwf_fname)\n    mkpath(dirname(ecmwf_fname))\n    download(\"https://data-assimilation.net/upload/OCEA0036/ecmwf_operational_archive_2022-12-01_2024-02-01.nc\",ecmwf_fname)\nend\n\nfrc_name_prefix = joinpath(modeldir,\"roms_frc_2023_\")\ndomain_name = \"Ligurian Sea Region\"\nVnames = [\"sustr\",\"svstr\",\"shflux\",\"swflux\",\"swrad\",\"Uwind\",\"Vwind\",\n    \"lwrad\",\"lwrad_down\",\"latent\",\"sensible\",\"cloud\",\"rain\",\"Pair\",\"Tair\",\"Qair\"]\n\n# forcing_filenames corresponds to `FRCNAME` in roms.in\nforcing_filenames = ROMS.prepare_ecmwf(ecmwf_fname,Vnames,frc_name_prefix,domain_name)","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"16-element Vector{Tuple{String, String}}:\n (\"sustr\", \"/home/runner/ROMS-implementation-test/roms_frc_2023_sms.nc\")\n (\"svstr\", \"/home/runner/ROMS-implementation-test/roms_frc_2023_sms.nc\")\n (\"shflux\", \"/home/runner/ROMS-implementation-test/roms_frc_2023_shflux.nc\")\n (\"swflux\", \"/home/runner/ROMS-implementation-test/roms_frc_2023_swflux.nc\")\n (\"swrad\", \"/home/runner/ROMS-implementation-test/roms_frc_2023_swrad.nc\")\n (\"Uwind\", \"/home/runner/ROMS-implementation-test/roms_frc_2023_wind.nc\")\n (\"Vwind\", \"/home/runner/ROMS-implementation-test/roms_frc_2023_wind.nc\")\n (\"lwrad\", \"/home/runner/ROMS-implementation-test/roms_frc_2023_lwrad.nc\")\n (\"lwrad_down\", \"/home/runner/ROMS-implementation-test/roms_frc_2023_lwrad.nc\")\n (\"latent\", \"/home/runner/ROMS-implementation-test/roms_frc_2023_latent.nc\")\n (\"sensible\", \"/home/runner/ROMS-implementation-test/roms_frc_2023_sensible.nc\")\n (\"cloud\", \"/home/runner/ROMS-implementation-test/roms_frc_2023_cloud.nc\")\n (\"rain\", \"/home/runner/ROMS-implementation-test/roms_frc_2023_rain.nc\")\n (\"Pair\", \"/home/runner/ROMS-implementation-test/roms_frc_2023_Pair.nc\")\n (\"Tair\", \"/home/runner/ROMS-implementation-test/roms_frc_2023_Tair.nc\")\n (\"Qair\", \"/home/runner/ROMS-implementation-test/roms_frc_2023_Qair.nc\")","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"We print a list of all generated files.","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"fn(name) = basename(name) # use relative file path\n# fn(name) = name         # use absolute file path\n\nprintln()\nprintln(\"The created netCDF files are in $modeldir.\");\nprintln(\"The following information has to be added to roms.in. A template of this file is\")\nprintln(\"provided in the directory User/External of your ROMS source code\")\nprintln(\"You can also use relative or absolute file names.\")\nprintln()\nprintln(\"! grid file \")\nprintln(\"     GRDNAME == $(fn(grd_name))\")\nprintln()\nprintln(\"! initial conditions\")\nprintln(\"     ININAME == $(fn(ini_name))\")\nprintln()\nprintln(\"! boundary conditions\")\nprintln(\"     NBCFILES == 1\")\nprintln(\"     BRYNAME == $(fn(bry_name))\")\nprintln()\nprintln(\"! climatology or large-scale circulatio model\")\nprintln(\"     NCLMFILES == 1\")\nprintln(\"     CLMNAME == $(fn(clm_name))\")\nprintln()\nprintln(\"! nudging coefficients file (optional)\")\nprintln(\"     NUDNAME == $(fn(nud_name))\")\nprintln()\nprintln(\"! forcing files\")\nprintln(\"     NFFILES == $(length(Vnames))\")\n\nfor i in 1:length(Vnames)\n    if i == 1\n        print(\"     FRCNAME == \")\n    else\n        print(\"                \")\n    end\n    print(\"$(fn(frc_name_prefix))$(Vnames[i]).nc\")\n    if i < length(Vnames)\n        print(\" \\\\\")\n    end\n    println()\nend","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"\nThe created netCDF files are in /home/runner/ROMS-implementation-test.\nThe following information has to be added to roms.in. A template of this file is\nprovided in the directory User/External of your ROMS source code\nYou can also use relative or absolute file names.\n\n! grid file \n     GRDNAME == roms_grd_liguriansea.nc\n\n! initial conditions\n     ININAME == roms_ini_2023.nc\n\n! boundary conditions\n     NBCFILES == 1\n     BRYNAME == roms_bry_2023.nc\n\n! climatology or large-scale circulatio model\n     NCLMFILES == 1\n     CLMNAME == roms_clm_2023.nc\n\n! nudging coefficients file (optional)\n     NUDNAME == roms_nud_7_50.nc\n\n! forcing files\n     NFFILES == 16\n     FRCNAME == roms_frc_2023_sustr.nc \\\n                roms_frc_2023_svstr.nc \\\n                roms_frc_2023_shflux.nc \\\n                roms_frc_2023_swflux.nc \\\n                roms_frc_2023_swrad.nc \\\n                roms_frc_2023_Uwind.nc \\\n                roms_frc_2023_Vwind.nc \\\n                roms_frc_2023_lwrad.nc \\\n                roms_frc_2023_lwrad_down.nc \\\n                roms_frc_2023_latent.nc \\\n                roms_frc_2023_sensible.nc \\\n                roms_frc_2023_cloud.nc \\\n                roms_frc_2023_rain.nc \\\n                roms_frc_2023_Pair.nc \\\n                roms_frc_2023_Tair.nc \\\n                roms_frc_2023_Qair.nc\n","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"Check the resulting files such as bathymetry, initial conditions, boundary conditions, interpolated model (clm_name file) and visualizing them.","category":"page"},{"location":"02_prep_roms/#Configuration-files","page":"Preparation","title":"Configuration files","text":"","category":"section"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"Beside the created NetCDF files, ROMS needs two configuration files (roms.in and varinfo.yaml)","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"romsdir = expanduser(\"~/src/roms\")\nmodeldir = expanduser(\"~/ROMS-implementation-test\")\nsimulationdir = joinpath(modeldir,\"Simulation1\")\nmkpath(simulationdir)\n\nfrc_name = joinpath.(modeldir,sort(filter(startswith(\"roms_frc\"),readdir(modeldir))));","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"Copy varinfo.yaml from ~/src/roms/ROMS/External/varinfo.yaml in your directory for your simulation (e.g. ROMS-implementation-test). This file does not need to be changed.","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"var_name_template = joinpath(romsdir,\"ROMS\",\"External\",\"varinfo.yaml\")\nvar_name = joinpath(simulationdir,\"varinfo.yaml\")\ncp(var_name_template,var_name; force=true);","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"Load the ROMS grid","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"domain = ROMS.Grid(grd_name);","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"We use roms.in from ~/src/roms/User/External/roms.in as a template","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"intemplate = joinpath(romsdir,\"User\",\"External\",\"roms.in\")\ninfile = joinpath(simulationdir,\"roms.in\");","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"This file is typicall edited with a text editor (when editing this file, do not use \"tabs\".). Check the glossary at the end of this file for the meaning of the keys that we will change.","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"Here we edit the file programmatically. These are the changes that are done in the following:","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"adapt MyAppCPP and change it to LIGURIANSEA\nadapt file names VARNAME, GRDNAME, ININAME, BRYNAME, CLMNAME, FRCNAME and NFFILES (varinfo.yaml, LS2v.nc, ic2019.nc, bc2019.nc, clim2019.nc, liguriansea2019_*.nc, * means the different variables). NFFILES is the number of forcing files.\nchange Lm, Mm and N based on the dimensions of your grid (make sure to read the glossary for these variable in roms.in)\nread the desciption about \"lateral boundary conditions\" and adapt boundaries LBC:\nuse closed (Clo) for boundaries without sea-point\nfor open boundaries:\nfree-surface: Chapman implicit (Cha)\n2D U/V-momentum: Flather (Fla)\n3D U/V-momentum, temperature, salinity: Radiation with nudging (RadNud)\nmixing TKE: Radiation (Rad)\nset the starting time and time reference","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"DSTART = ...\nTIME_REF =  18581117","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"where DSTART is here the number of days since 1858-11-17 or November 17, 1858 (see also modified Julia day) of the start of the model simulation (t0 in the julia script). For instance the number of days since 2014-01-01 (year-month-day) can be computed by of following commands in Julia:","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"using Dates\nDate(2020,1,1) - Date(1858,11,17)","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"The inverse operation can be done with:","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"using Dates\nDate(1858,11,17) + Day(58849)","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"You can use DateTime if you want to specify hour, minutes or seconds.","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"Adapt the length of a time step DT (in seconds) and number of time steps NTIMES\nDT can be 300 seconds\nInitially we choose:\nNTIMES -> number of time step corresponding to 2 days (e.g. 2*24*60*60/DT where DT is the time steps in seconds)\nNHIS, NAVG-> number of time steps corresponding to 1 hour\nNRST -> number of time steps correspond to 1 hour","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"# time step (seconds)\nDT = 300.\n# output frequency of ROMS in time steps\nNHIS = round(Int,24*60*60 / DT)\nNRST = NAVG = NHIS\n\n# number of time steps\nt0 = DateTime(2023,1,1);\nt1 = DateTime(2023,1,4);\nNTIMES = floor(Int,Dates.value(t1-t0) / (DT * 1000))","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"864","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"How many CPU cores does your machine have? You can use the command top in a shell terminal followed by 1. The number of CPU cores should be NtileI * NtileJ. The parameters NtileI and NtileJ are defined in roms.in.","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"NtileI = 1\nNtileJ = 1\n\nsubstitutions = Dict(\n    \"TITLE\" => \"My test\",\n    \"NtileI\" => NtileI,\n    \"NtileJ\" => NtileJ,\n    \"TIME_REF\" => \"18581117\",\n    \"VARNAME\" => var_name,\n    \"GRDNAME\" => grd_name,\n    \"ININAME\" => ini_name,\n    \"BRYNAME\" => bry_name,\n    \"CLMNAME\" => clm_name,\n    \"NFFILES\" => length(frc_name),\n    \"FRCNAME\" => join(frc_name,\"  \\\\\\n       \"),\n    \"Vtransform\" => domain.Vtransform,\n    \"Vstretching\" => domain.Vstretching,\n    \"THETA_S\" => domain.theta_s,\n    \"THETA_B\" => domain.theta_b,\n    \"TCLINE\" => domain.Tcline,\n    \"Lm\" => size(domain.h,1)-2,\n    \"Mm\" => size(domain.h,2)-2,\n    \"N\" => domain.nlevels,\n    \"LBC(isFsur)\" => whenopen(domain,\"Cha\"),\n    \"LBC(isUbar)\" => whenopen(domain,\"Fla\"),\n    \"LBC(isVbar)\" => whenopen(domain,\"Fla\"),\n    \"LBC(isUvel)\" => whenopen(domain,\"RadNud\"),\n    \"LBC(isVvel)\" => whenopen(domain,\"RadNud\"),\n    \"LBC(isMtke)\" => whenopen(domain,\"Rad\"),\n    \"LBC(isTvar)\" => whenopen(domain,\"RadNud\") * \" \\\\\\n\" * whenopen(domain,\"RadNud\"),\n    \"DT\" => DT,\n    \"NHIS\" => NHIS,\n    \"NAVG\" => NAVG,\n    \"NRST\" => NRST,\n    \"NTIMES\" => NTIMES,\n    \"NUDNAME\" => nud_name,\n    \"TNUDG\" => \"10.0d0 10.0d0\",\n    \"LtracerCLM\" => \"T T\",\n    \"LnudgeTCLM\" => \"T T\",\n    \"OBCFAC\" => 10.0,\n)\n\nROMS.infilereplace(intemplate,infile,substitutions)","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"[ Info: setting TITLE to: My test\n[ Info: setting VARNAME to: /home/runner/ROMS-implementation-test/Simulation1/varinfo.yaml\n[ Info: setting Lm to: 136\n[ Info: setting Mm to: 73\n[ Info: setting N to: 32\n[ Info: setting NtileI to: 1\n[ Info: setting NtileJ to: 1\n[ Info: setting LBC(isFsur) to: Cha Cha Clo Clo\n[ Info: setting LBC(isUbar) to: Fla Fla Clo Clo\n[ Info: setting LBC(isVbar) to: Fla Fla Clo Clo\n[ Info: setting LBC(isUvel) to: RadNud RadNud Clo Clo\n[ Info: setting LBC(isVvel) to: RadNud RadNud Clo Clo\n[ Info: setting LBC(isMtke) to: Rad Rad Clo Clo\n┌ Info: setting LBC(isTvar) to: RadNud RadNud Clo Clo \\\n└ RadNud RadNud Clo Clo\n[ Info: setting NTIMES to: 864\n[ Info: setting DT to: 300.0\n[ Info: setting NRST to: 288\n[ Info: setting NHIS to: 288\n[ Info: setting NAVG to: 288\n[ Info: setting Vtransform to: 2\n[ Info: setting Vstretching to: 4\n[ Info: setting THETA_S to: 5.0\n[ Info: setting THETA_B to: 0.4\n[ Info: setting TCLINE to: 50.0\n[ Info: setting TIME_REF to: 18581117\n[ Info: setting TNUDG to: 10.0d0 10.0d0\n[ Info: setting OBCFAC to: 10.0\n[ Info: setting LtracerCLM to: T T\n[ Info: setting LnudgeTCLM to: T T\n[ Info: setting GRDNAME to: /home/runner/ROMS-implementation-test/roms_grd_liguriansea.nc\n[ Info: setting ININAME to: /home/runner/ROMS-implementation-test/roms_ini_2023.nc\n[ Info: setting BRYNAME to: /home/runner/ROMS-implementation-test/roms_bry_2023.nc\n[ Info: setting CLMNAME to: /home/runner/ROMS-implementation-test/roms_clm_2023.nc\n[ Info: setting NUDNAME to: /home/runner/ROMS-implementation-test/roms_nud_7_50.nc\n[ Info: setting NFFILES to: 13\n┌ Info: setting FRCNAME to: /home/runner/ROMS-implementation-test/roms_frc_2023_Pair.nc  \\\n│        /home/runner/ROMS-implementation-test/roms_frc_2023_Qair.nc  \\\n│        /home/runner/ROMS-implementation-test/roms_frc_2023_Tair.nc  \\\n│        /home/runner/ROMS-implementation-test/roms_frc_2023_cloud.nc  \\\n│        /home/runner/ROMS-implementation-test/roms_frc_2023_latent.nc  \\\n│        /home/runner/ROMS-implementation-test/roms_frc_2023_lwrad.nc  \\\n│        /home/runner/ROMS-implementation-test/roms_frc_2023_rain.nc  \\\n│        /home/runner/ROMS-implementation-test/roms_frc_2023_sensible.nc  \\\n│        /home/runner/ROMS-implementation-test/roms_frc_2023_shflux.nc  \\\n│        /home/runner/ROMS-implementation-test/roms_frc_2023_sms.nc  \\\n│        /home/runner/ROMS-implementation-test/roms_frc_2023_swflux.nc  \\\n│        /home/runner/ROMS-implementation-test/roms_frc_2023_swrad.nc  \\\n└        /home/runner/ROMS-implementation-test/roms_frc_2023_wind.nc\n68c68\n<        TITLE = Wind-Driven Upwelling/Downwelling over a Periodic Channel\n---\n>        TITLE = My test\n77c77\n<      VARNAME = ROMS/External/varinfo.yaml\n---\n>      VARNAME = /home/runner/ROMS-implementation-test/Simulation1/varinfo.yaml\n95,97c95,97\n<           Lm == 41            ! Number of I-direction INTERIOR RHO-points\n<           Mm == 80            ! Number of J-direction INTERIOR RHO-points\n<            N == 16            ! Number of vertical levels\n---\n>           Lm == 136            ! Number of I-direction INTERIOR RHO-points\n>           Mm == 73            ! Number of J-direction INTERIOR RHO-points\n>            N == 32            ! Number of vertical levels\n185,190c185,190\n<    LBC(isFsur) ==   Per     Clo     Per     Clo         ! free-surface\n<    LBC(isUbar) ==   Per     Clo     Per     Clo         ! 2D U-momentum\n<    LBC(isVbar) ==   Per     Clo     Per     Clo         ! 2D V-momentum\n<    LBC(isUvel) ==   Per     Clo     Per     Clo         ! 3D U-momentum\n<    LBC(isVvel) ==   Per     Clo     Per     Clo         ! 3D V-momentum\n<    LBC(isMtke) ==   Per     Clo     Per     Clo         ! mixing TKE\n---\n>    LBC(isFsur) == Cha Cha Clo Clo         ! free-surface\n>    LBC(isUbar) == Fla Fla Clo Clo         ! 2D U-momentum\n>    LBC(isVbar) == Fla Fla Clo Clo         ! 2D V-momentum\n>    LBC(isUvel) == RadNud RadNud Clo Clo         ! 3D U-momentum\n>    LBC(isVvel) == RadNud RadNud Clo Clo         ! 3D V-momentum\n>    LBC(isMtke) == Rad Rad Clo Clo         ! mixing TKE\n192c192,193\n<    LBC(isTvar) ==   Per     Clo     Per     Clo \\       ! temperature\n---\n>    LBC(isTvar) == RadNud RadNud Clo Clo \\\n> RadNud RadNud Clo Clo       ! temperature\n225,226c226,227\n<       NTIMES == 1440\n<           DT == 300.0d0\n---\n>       NTIMES == 864\n>           DT == 300.0\n263c264\n<         NHIS == 72\n---\n>         NHIS == 288\n268c269\n<         NAVG == 72\n---\n>         NAVG == 288\n405,407c406,408\n<      THETA_S == 3.0d0                      ! surface stretching parameter\n<      THETA_B == 0.0d0                      ! bottom  stretching parameter\n<       TCLINE == 25.0d0                     ! critical depth (m)\n---\n>      THETA_S == 5.0                      ! surface stretching parameter\n>      THETA_B == 0.4                      ! bottom  stretching parameter\n>       TCLINE == 50.0                     ! critical depth (m)\n425c426\n<     TIME_REF =  0.0d0                      ! yyyymmdd.dd\n---\n>     TIME_REF = 18581117                      ! yyyymmdd.dd\n430c431\n<        TNUDG == 2*0.0d0                    ! days\n---\n>        TNUDG == 10.0d0 10.0d0                    ! days\n439c440\n<       OBCFAC == 0.0d0                      ! nondimensional\n---\n>       OBCFAC == 10.0                      ! nondimensional\n473c474\n<   LtracerCLM == F F                        ! temperature, salinity, inert\n---\n>   LtracerCLM == T T                        ! temperature, salinity, inert\n483c484\n<   LnudgeTCLM == F F                        ! temperature, salinity, inert\n---\n>   LnudgeTCLM == T T                        ! temperature, salinity, inert\n964,965c965,966\n<      GRDNAME == roms_grd.nc\n<      ININAME == roms_ini.nc\n---\n>      GRDNAME == /home/runner/ROMS-implementation-test/roms_grd_liguriansea.nc\n>      ININAME == /home/runner/ROMS-implementation-test/roms_ini_2023.nc\n1007c1008\n<      BRYNAME == roms_bry.nc\n---\n>      BRYNAME == /home/runner/ROMS-implementation-test/roms_bry_2023.nc\n1019c1020\n<      CLMNAME == roms_clm.nc\n---\n>      CLMNAME == /home/runner/ROMS-implementation-test/roms_clm_2023.nc\n1023c1024\n<      NUDNAME == roms_nud.nc\n---\n>      NUDNAME == /home/runner/ROMS-implementation-test/roms_nud_7_50.nc\n1051c1052\n<      NFFILES == 1                          ! number of unique forcing files\n---\n>      NFFILES == 13                          ! number of unique forcing files\n1053c1054,1066\n<      FRCNAME == roms_frc.nc                ! forcing file 1, grid 1\n---\n>      FRCNAME == /home/runner/ROMS-implementation-test/roms_frc_2023_Pair.nc  \\\n>        /home/runner/ROMS-implementation-test/roms_frc_2023_Qair.nc  \\\n>        /home/runner/ROMS-implementation-test/roms_frc_2023_Tair.nc  \\\n>        /home/runner/ROMS-implementation-test/roms_frc_2023_cloud.nc  \\\n>        /home/runner/ROMS-implementation-test/roms_frc_2023_latent.nc  \\\n>        /home/runner/ROMS-implementation-test/roms_frc_2023_lwrad.nc  \\\n>        /home/runner/ROMS-implementation-test/roms_frc_2023_rain.nc  \\\n>        /home/runner/ROMS-implementation-test/roms_frc_2023_sensible.nc  \\\n>        /home/runner/ROMS-implementation-test/roms_frc_2023_shflux.nc  \\\n>        /home/runner/ROMS-implementation-test/roms_frc_2023_sms.nc  \\\n>        /home/runner/ROMS-implementation-test/roms_frc_2023_swflux.nc  \\\n>        /home/runner/ROMS-implementation-test/roms_frc_2023_swrad.nc  \\\n>        /home/runner/ROMS-implementation-test/roms_frc_2023_wind.nc                ! forcing file 1, grid 1\n","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"Always make make sure that THETA_S, THETA_B, TCLINE, Vtransform and Vstretching match the values in your julia script. We can review the changes with the shell command:","category":"page"},{"location":"02_prep_roms/","page":"Preparation","title":"Preparation","text":"diff -u --color ~/src/roms/User/External/roms.in roms.in","category":"page"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"EditURL = \"../../examples/04_plots.jl\"","category":"page"},{"location":"04_plots/#Plotting-ROMS-results-and-input-files","page":"Plots","title":"Plotting ROMS results and input files","text":"","category":"section"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"The code here is also available as a notebook 04_plots.ipynb.","category":"page"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"The aim here is to visualize the model files with generic plotting and analsis packages rather than to use a model specific visualization tool which hides many details and might lack of flexibility. The necessary files are already in the directory containing the model simulation and its parent direction (ROMS-implementation-test). Downloading the files is only needed if you did not run the simulation.","category":"page"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"grd_name = \"roms_grd_liguriansea.nc\"\n\nif !isfile(grd_name)\n    download(\"https://dox.ulg.ac.be/index.php/s/J9DXhUPXbyLADJa/download\",grd_name)\nend\n\nfname = \"roms_his.nc\"\nif !isfile(fname)\n    download(\"https://dox.ulg.ac.be/index.php/s/17UWsY7tRNMDf4w/download\",fname)\nend","category":"page"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"\"roms_his.nc\"","category":"page"},{"location":"04_plots/#Bathymetry","page":"Plots","title":"Bathymetry","text":"","category":"section"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"In this example, the bathymetry defined in the grid file is visualized. Make sure that your current working directory contains the file roms_grd_liguriansea.nc (use e.g. ;cd ~/ROMS-implementation-test)","category":"page"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"using ROMS, PyPlot, NCDatasets, GeoDatasets, Statistics\n\nds_grid = NCDataset(\"roms_grd_liguriansea.nc\");\nlon = ds_grid[\"lon_rho\"][:,:];\nlat = ds_grid[\"lat_rho\"][:,:];\nh = nomissing(ds_grid[\"h\"][:,:],NaN);\nmask_rho = ds_grid[\"mask_rho\"][:,:];\n\nfigure(figsize=(7,4))\nhmask = copy(h)\nhmask[mask_rho .== 0] .= NaN;\npcolormesh(lon,lat,hmask);\ncolorbar()\n# or colorbar(orientation=\"horizontal\")\ngca().set_aspect(1/cosd(mean(lat)))\n\ntitle(\"smoothed bathymetry [m]\");\nsavefig(\"smoothed_bathymetry.png\");","category":"page"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"(Image: )","category":"page"},{"location":"04_plots/#Surface-temperature","page":"Plots","title":"Surface temperature","text":"","category":"section"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"The surface surface temperature (or salinity) of the model output or climatology file can be visualized as follows. The parameter n is the time instance to plot. Make sure that your current working directory contains the file to plot (use e.g. ;cd ~/ROMS-implementation-test/ to plot roms_his.nc)","category":"page"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"# instance to plot\nn = 1\n\nds = NCDataset(\"roms_his.nc\")\ntemp = nomissing(ds[\"temp\"][:,:,end,n],NaN);\ntemp[mask_rho .== 0] .= NaN;\n\nif haskey(ds,\"time\")\n    # for the climatology file\n    time = ds[\"time\"][:]\nelse\n    # for ROMS output\n    time = ds[\"ocean_time\"][:]\nend\n\nfigure(figsize=(7,4))\npcolormesh(lon,lat,temp)\ngca().set_aspect(1/cosd(mean(lat)))\ncolorbar();\ntitle(\"sea surface temperature [°C]\")\nsavefig(\"SST.png\");","category":"page"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"(Image: )","category":"page"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"Exercise:","category":"page"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"Plot salinity\nPlot different time instance (n)\nWhere do we specify that the surface values are to be plotted? Plot different layers.","category":"page"},{"location":"04_plots/#Surface-velocity-and-elevation","page":"Plots","title":"Surface velocity and elevation","text":"","category":"section"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"zeta = nomissing(ds[\"zeta\"][:,:,n],NaN)\nu = nomissing(ds[\"u\"][:,:,end,n],NaN);\nv = nomissing(ds[\"v\"][:,:,end,n],NaN);\n\nmask_u = ds_grid[\"mask_u\"][:,:];\nmask_v = ds_grid[\"mask_v\"][:,:];\n\nu[mask_u .== 0] .= NaN;\nv[mask_v .== 0] .= NaN;\nzeta[mask_rho .== 0] .= NaN;\n\n# ROMS uses an Arakawa C grid\nu_r = cat(u[1:1,:], (u[2:end,:] .+ u[1:end-1,:])/2, u[end:end,:], dims=1);\nv_r = cat(v[:,1:1], (v[:,2:end] .+ v[:,1:end-1])/2, v[:,end:end], dims=2);\n\n# all sizes should be the same\nsize(u_r), size(v_r), size(mask_rho)\n\nfigure(figsize=(7,4))\npcolormesh(lon,lat,zeta)\ncolorbar();\n# plot only a single arrow for r x r grid cells\nr = 3;\ni = 1:r:size(lon,1);\nj = 1:r:size(lon,2);\nq = quiver(lon[i,j],lat[i,j],u_r[i,j],v_r[i,j])\nquiverkey(q,0.9,0.85,1,\"1 m/s\",coordinates=\"axes\")\ntitle(\"surface currents [m/s] and elevation [m]\");\ngca().set_aspect(1/cosd(mean(lat)))\nsavefig(\"surface_zeta_uv.png\");","category":"page"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"(Image: )","category":"page"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"Exercise:","category":"page"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"The surface currents seems to follow lines of constant surface elevation. Explain why this is to be expected.","category":"page"},{"location":"04_plots/#Vertical-section","page":"Plots","title":"Vertical section","text":"","category":"section"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"In this example we will plot a vertical section by slicing the model output at a given index.","category":"page"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"It is very important that the parameters (opt) defining the vertical layer match the parameters values choosen when ROMS was setup.","category":"page"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"opt = (\n    Tcline = 50,   # m\n    theta_s = 5,   # surface refinement\n    theta_b = 0.4, # bottom refinement\n    nlevels = 32,  # number of vertical levels\n    Vtransform  = 2,\n    Vstretching = 4,\n)\n\nhmin = minimum(h)\nhc = min(hmin,opt.Tcline)\nz_r = ROMS.set_depth(opt.Vtransform, opt.Vstretching,\n                   opt.theta_s, opt.theta_b, hc, opt.nlevels,\n                   1, h);\n\ntemp = nomissing(ds[\"temp\"][:,:,:,n],NaN);\n\nmask3 = repeat(mask_rho,inner=(1,1,opt.nlevels))\nlon3 = repeat(lon,inner=(1,1,opt.nlevels))\nlat3 = repeat(lat,inner=(1,1,opt.nlevels))\n\ntemp[mask3 .== 0] .= NaN;\n\ni = 20;\n\nclf()\ncontourf(lat3[i,:,:],z_r[i,:,:],temp[i,:,:],40)\nylim(-300,0);\nxlabel(\"latitude\")\nylabel(\"depth [m]\")\ntitle(\"temperature at $(round(lon[i,1],sigdigits=4)) °E\")\ncolorbar();\n\n# inset plot\nax2 = gcf().add_axes([0.1,0.18,0.4,0.3])\nax2.pcolormesh(lon,lat,temp[:,:,end])\nax2.set_aspect(1/cosd(mean(lat)))\nax2.plot(lon[i,[1,end]],lat[i,[1,end]],\"m\")\n\nsavefig(\"temp_section1.png\");","category":"page"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"Vtransform  = 2   ROMS-UCLA\n   igrid     = 1 at horizontal RHO-points\n\nVstretching = 4   Shchepetkin (2010)\n   kgrid    = 0   at vertical RHO-points\n   theta_s  = 5\n   theta_b  = 0.4\n   hc       = 2.0\n\n S-coordinate curves: k, s(k), C(k)\n\n     32    -1.562500000000e-02    -5.060164946710e-05\n     31    -4.687500000000e-02    -4.572401105559e-04\n     30    -7.812500000000e-02    -1.280298055894e-03\n     29    -1.093750000000e-01    -2.539560500182e-03\n     28    -1.406250000000e-01    -4.265266261424e-03\n     27    -1.718750000000e-01    -6.498792311199e-03\n     26    -2.031250000000e-01    -9.293584054181e-03\n     25    -2.343750000000e-01    -1.271634639800e-02\n     24    -2.656250000000e-01    -1.684851356914e-02\n     23    -2.968750000000e-01    -2.178801812466e-02\n     22    -3.281250000000e-01    -2.765138117566e-02\n     21    -3.593750000000e-01    -3.457614600596e-02\n     20    -3.906250000000e-01    -4.272367537770e-02\n     19    -4.218750000000e-01    -5.228232795041e-02\n     18    -4.531250000000e-01    -6.347102015626e-02\n     17    -4.843750000000e-01    -7.654316490419e-02\n     16    -5.156250000000e-01    -9.179095542844e-02\n     15    -5.468750000000e-01    -1.095499286006e-01\n     14    -5.781250000000e-01    -1.302036934689e-01\n     13    -6.093750000000e-01    -1.541886431904e-01\n     12    -6.406250000000e-01    -1.819983765227e-01\n     11    -6.718750000000e-01    -2.141874325067e-01\n     10    -7.031250000000e-01    -2.513737824031e-01\n      9    -7.343750000000e-01    -2.942393202666e-01\n      8    -7.656250000000e-01    -3.435273436662e-01\n      7    -7.968750000000e-01    -4.000357194613e-01\n      6    -8.281250000000e-01    -4.646040954176e-01\n      5    -8.593750000000e-01    -5.380931709292e-01\n      4    -8.906250000000e-01    -6.213537270252e-01\n      3    -9.218750000000e-01    -7.151829201676e-01\n      2    -9.531250000000e-01    -8.202653975901e-01\n      1    -9.843750000000e-01    -9.370972868551e-01\n\n","category":"page"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"(Image: temp_section1)","category":"page"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"Exercise:","category":"page"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"Plot a section at different longitude and latitude","category":"page"},{"location":"04_plots/#Horizontal-section","page":"Plots","title":"Horizontal section","text":"","category":"section"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"A horizontal at the fixed depth of 200 m is extracted and plotted.","category":"page"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"tempi = ROMS.model_interp3(lon,lat,z_r,temp,lon,lat,[-200])\nmlon,mlat,mdata = GeoDatasets.landseamask(resolution='f', grid=1.25)\n\nfigure(figsize=(7,4))\npcolormesh(lon,lat,tempi[:,:,1])\ncolorbar();\nax = axis()\ncontourf(mlon,mlat,mdata',[0.5, 3],colors=[\"gray\"])\naxis(ax)\ngca().set_aspect(1/cosd(mean(lat)))\ntitle(\"temperature at 200 m [°C]\")\nsavefig(\"temp_hsection_200.png\");","category":"page"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"[ Info: Downloading file 'lsmask_1.25min_f.bin' from 'https://raw.githubusercontent.com/matplotlib/basemap/v1.2.2rel/lib/mpl_toolkits/basemap/data/lsmask_1.25min_f.bin' with cURL.\n","category":"page"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"(Image: )","category":"page"},{"location":"04_plots/#Arbitrary-vertical-section","page":"Plots","title":"Arbitrary vertical section","text":"","category":"section"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"The vectors section_lon and section_lat define the coordinates where we want to extract the surface temperature.","category":"page"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"section_lon = LinRange(8.18, 8.7,100);\nsection_lat = LinRange(43.95, 43.53,100);\n\nusing Interpolations\n\nfunction section_interp(v)\n    itp = interpolate((lon[:,1],lat[1,:]),v,Gridded(Linear()))\n    return itp.(section_lon,section_lat)\nend\n\nsection_temp = mapslices(section_interp,temp,dims=(1,2))\nsection_z = mapslices(section_interp,z_r,dims=(1,2))\n\nsection_x = repeat(section_lon,inner=(1,size(temp,3)))\n\nclf()\ncontourf(section_x,section_z[:,1,:],section_temp[:,1,:],50)\nylim(-500,0)\ncolorbar()\nxlabel(\"longitude\")\nylabel(\"depth\")\ntitle(\"temperature section [°C]\");\n\n# inset plot\nax2 = gcf().add_axes([0.4,0.2,0.4,0.3])\nax2.pcolormesh(lon,lat,temp[:,:,end])\naxis(\"on\")\nax2.set_aspect(1/cosd(mean(lat)))\nax2.plot(section_lon,section_lat,\"m\")\n\nsavefig(\"temp_vsection.png\");","category":"page"},{"location":"04_plots/","page":"Plots","title":"Plots","text":"(Image: )","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"This package allows to setup necessary files for the ROMS ocean model.","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"This tutorial is for students following the ULiège lecture OCEA0036-1 but might be useful for others as well.","category":"page"},{"location":"#Using-for-the-first-time-a-Linux-(or-UNIX-like)-environment?","page":"Tutorial","title":"Using for the first time a Linux (or UNIX-like) environment?","text":"","category":"section"},{"location":"","page":"Tutorial","title":"Tutorial","text":"If you are familiar with Linux and the command line you can skip to section.","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"Essential shell commands:\npwd: print the name of the current working directory\nls: list all files and directories in the current working directory\ncd directory_name: change directory; \"go inside\" the directory\nmkdir directory_name: create a directory\ncp source destination: copy a file\nmv source destination: move a file\nrm file: remove a file (permanently)\nfind directory_name -name \"*foo*\": find all files under directory_name (including sub-directories) whose name contains foo.\ndiff -u --color file1 file2: compare two text files\ngnome-text-editor filename &, pluma filename & or editor filename &: open a text editor to edit a file.\nShell keyboard short cuts (also applicable to a julia session):\nup-arrow: show previous command (similarly down-arrow show next command)\nTAB: complete command or file/directory name if it is unambiguous\nTAB TAB: show all possible commands or file/directory name if multiple possibilities exists\nControl-R and type some_string: Search for a previously executed command which includes some_string.\nControl-C: cancel the previous command (be careful to not to cancel your text editor session)\nControl-D: close a shell session\nSpecial directories:\n.: current directory\n..: parent directory\n~: home directory\nPlease pay attention to the difference between upper- and lowercase letters\nPresence and absence of white space is also significant\nAvoid using directories and file names with a space in them, otherwise you need to put the directory in quotes (single or double quotes) or use black-slash (\\\\) in front of the white space. For example, shell command cd My Directory Name does not work, use one of the following instead:","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"cd \"My Directory Name\"\ncd 'My Directory Name'\ncd My\\ Directory\\ Name","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"Check out the basic shell commands and this tutorial","category":"page"},{"location":"#Registration","page":"Tutorial","title":"Registration","text":"","category":"section"},{"location":"","page":"Tutorial","title":"Tutorial","text":"Please register at:","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"CMEMS (Copernicus Marine Environment Monitoring Service)","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"To generate new forcing fields, register at (optional):","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"ECMWF (European Centre for Medium-Range Weather Forecasts). To access the operational forecast on the MARS service you will need a special permissions granted by your national weather service (in Europe). The default permission will let you access e.g. ERA5 dataset.","category":"page"},{"location":"#Required-software","page":"Tutorial","title":"Required software","text":"","category":"section"},{"location":"","page":"Tutorial","title":"Tutorial","text":"The tutorial can be run either:","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"on your computer using a preconfigured virtual machine\non the machines of the ULiège computer room\ndirectly on your computer (but all software has to be installed beforehand) if you are using Ubuntu/Debian. Other Linux OS will work too, but the installation instructions must be adapted. Mac OS and Windows (using e.g. Windows Subsystem for Linux) might work also; but if you are not using Linux, it is preferable to the the virtual machine.\non the GHER notebook server (https://notebook-gher.uliege.be/) for ULiège students.","category":"page"},{"location":"#Preconfigured-virtual-machine","page":"Tutorial","title":"Preconfigured virtual machine","text":"","category":"section"},{"location":"","page":"Tutorial","title":"Tutorial","text":"A preconfigured virtual machine is available here. You also need:","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"Virtual Box requires the Microsoft Visual C++ Redistributable which should be installed before (as of Virtual Box version 7.0.4).\nVirtual Box can be installed from here.\nThe OVA file must be imported in Virtual Box as explained in the documentation.","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"The account student has the password tritro. In this virtual machine, all software is already pre-installed, but must be updated using this shell commands:","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"cd .julia/dev/ROMS\ngit pull","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"Then open a julia session (typing the julia command), and update all packages with:","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"using Pkg\nPkg.update()","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"Note, it is not necessary for this tutorial to update the whole operating system.","category":"page"},{"location":"#Installation-on-Debian/Ubuntu/Linux-(or-UNIX-like-operating-systems)","page":"Tutorial","title":"Installation on Debian/Ubuntu/Linux (or UNIX-like operating systems)","text":"","category":"section"},{"location":"","page":"Tutorial","title":"Tutorial","text":"If you do not use this virtual machine the following software need to be installed:","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"Julia. Under Linux, you can install Julia with the following shell commands:","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"curl -fsSL https://install.julialang.org | sh","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"During installation, you can confirm all default choices. More information is available here.","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"Under Linux, you need to install also python3-matplotlib for PythonPlot. On Debian/Ubuntu, this packages can be installed by this command:","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"sudo apt install python3-matplotlib","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"Julia package, PythonPlot, NCDatasets, ROMS which can be installed by:","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"using Pkg\nPkg.add(\"PythonPlot\")\nPkg.add(\"NCDatasets\")\nPkg.develop(url=\"https://github.com/Alexander-Barth/ROMS.jl\")","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"Other required software typically available from a package manager:","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"A Fortran 90 compiler (e.g. gfortran)\nGNU make\nNetCDF (including headers files for development and the tools ncdump, nf-config)\nperl\nPython and pip\nMPI (optional)\ngit (optional)","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"Note that all libraries (NetCDF and MPI) must be compiled with the same Fortran compiler.","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"On Windows, various ways exist to install gfortran, GNU make and other dependencies:","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"Windows Subsystem for Linux\nInstallation guide\nFAQ (in particular exchanging files)\nCygwin\nMSYS2\nLinux virtual machine using e.g. VirtualBox\n...","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"On MacOS X:","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"Homebrew\n...","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"On Debian/Ubuntu, these packages can be installed by this command:","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"sudo apt install gfortran make perl netcdf-bin libnetcdff-dev libopenmpi-dev openmpi-bin git python3-pip python3-setuptools unzip","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"For ECMWF data, you need the package ecmwf-api-client (optional). Follow the installation instructions (including the ECMWF key). For questions related to ECMWF data access please also consult this document.\nNote that the ECMWF key is different from your ECMWF password.","category":"page"},{"location":"#Install-or-update-the-ROMS.jl-julia-package","page":"Tutorial","title":"Install or update the ROMS.jl julia package","text":"","category":"section"},{"location":"","page":"Tutorial","title":"Tutorial","text":"Install ROMS.jl by using the following command:","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"using Pkg\nPkg.develop(url=\"https://github.com/Alexander-Barth/ROMS.jl\")","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"Make sure to use the latest version by using this shell commands:","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"cd .julia/dev/ROMS\ngit pull","category":"page"},{"location":"#Check-your-environment","page":"Tutorial","title":"Check your environment","text":"","category":"section"},{"location":"","page":"Tutorial","title":"Tutorial","text":"Check julia version:","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"julia --version","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"Check the Fortran Compiler","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"gfortran --version","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"MPI","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"mpif90 --version\nmpirun --help","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"NetCDF","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"nf-config --all","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"These commands should return a basic usage info or the version number if they are correctly installed.","category":"page"},{"location":"#Choise-of-area","page":"Tutorial","title":"Choise of area","text":"","category":"section"},{"location":"","page":"Tutorial","title":"Tutorial","text":"Choose an area:","category":"page"},{"location":"","page":"Tutorial","title":"Tutorial","text":"What interesting processes are present in your studied area? (note: now we all use the Ligurian Sea)\nAre there in situ measurements available for your area? Look for temperature and salinity within your areas (for any time frame)\nCheck with World Ocean Database\nCMEMS in situ Thematic Assemble Centre (TAC)\nVisualize a couple of downloaded profiles:\nHints: in Julia you can use the package NCDatasets\nHow would you distribute the vertical resolution in your model represent this profile?\nCheck that your longitude/latitude/time range model of your nested model is within longitude/latitude/time range of the outer model providing the boundary conditions\nChoose the domain such to avoid unnecessary open ocean boundary conditions","category":"page"},{"location":"#ROMS-configuration","page":"Tutorial","title":"ROMS configuration","text":"","category":"section"},{"location":"","page":"Tutorial","title":"Tutorial","text":"01_build_roms.ipynb: compilation of the source code\n02_prep_roms.ipynb: creating input files\n03_run_roms.ipynb: running the ROMS model\n04_plots.ipynb: plotting the results","category":"page"}]
}
